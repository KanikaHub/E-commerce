{"ast":null,"code":"var _jsxFileName = \"E:\\\\sahiltinku\\\\appcode\\\\e-commerce\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { uc } from \"./UserContext\";\nimport { useContext } from \"react\";\nimport Order from \"./Order\";\nimport { OrdersService, ProductsService } from './Service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  let [orders, setorders] = useState([]);\n  console.log(orders);\n\n  //get context\n  let ur = useContext(uc);\n\n  //executes only once - on initial render =  componentDidMount\n  useEffect(() => {\n    document.title = \"Dashboard - eCommerce\";\n\n    //load data from database\n    // (async()=>{})()\n\n    (async () => {\n      let ordersResponse = await fetch(`http://localhost:5000/orders?userid=${ur.user.currentUserId}`, {\n        method: \"GET\"\n      });\n      if (ordersResponse.ok) {\n        //status code is 200\n        let ordersResponseBody = await ordersResponse.json();\n        //  console.log(ordersResponseBody);\n\n        //get all data from products\n        let productsResponse = await fetch(`http://localhost:5000/products`, {\n          method: \"GET\"\n        });\n        if (productsResponse.ok) {\n          let productsResponseBody = await productsResponse.json();\n          //read all orders data\n          // console.log(productsResponseBody);\n\n          ordersResponseBody.forEach(ele => {\n            ele.product = productsResponseBody.find(prod => prod.id === ele.productId);\n          });\n        }\n        // console.log(ordersResponseBody);\n        setorders(ordersResponseBody);\n      }\n    })();\n  }, [ur.user.currentUserId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 py-3 header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), \" Dashboard\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"py-2 my-2 text-info border-bottom border-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-history\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), \" Previous Orders\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge badge-info text-primary\",\n            children: getPreviousOrders(orders).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), getPreviousOrders(orders).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger\",\n          children: \"No orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this) : '', getPreviousOrders(orders).map(ord => {\n          return /*#__PURE__*/_jsxDEV(Order, {\n            orderId: ord.id,\n            productId: ord.productId,\n            userId: ord.userId,\n            isPaymentCompleted: ord.isPaymentCompleted,\n            quantity: ord.quantity,\n            productName: ord.product.productName,\n            price: ord.product.price\n          }, ord.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 22\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"py-2 my-2 text-primary border-bottom border-primary\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-shopping-cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), \" Cart\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge badge-primary text-primary\",\n            children: getCart(orders).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), getCart(orders).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger\",\n          children: \"No product in your cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this) : '', getCart(orders).map(ord => {\n          return /*#__PURE__*/_jsxDEV(Order, {\n            orderId: ord.id,\n            productId: ord.productId,\n            userId: ord.userId,\n            isPaymentCompleted: ord.isPaymentCompleted,\n            quantity: ord.quantity,\n            productName: ord.product.productName,\n            price: ord.product.price\n          }, ord.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 22\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"wqBilvvKlSAe0r7E9w33dvXhKeA=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","uc","useContext","Order","OrdersService","ProductsService","Dashboard","orders","setorders","console","log","ur","document","title","ordersResponse","fetch","user","currentUserId","method","ok","ordersResponseBody","json","productsResponse","productsResponseBody","forEach","ele","product","find","prod","id","productId","getPreviousOrders","length","map","ord","userId","isPaymentCompleted","quantity","productName","price","getCart"],"sources":["E:/sahiltinku/appcode/e-commerce/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { uc } from \"./UserContext\";\r\nimport { useContext } from \"react\";\r\nimport Order from \"./Order\";\r\nimport {OrdersService,ProductsService}from './Service';\r\nconst Dashboard = () => {\r\n  let [orders, setorders] = useState([]);\r\nconsole.log(orders)\r\n\r\n  //get context\r\n  let ur = useContext(uc);\r\n\r\n  \r\n  //executes only once - on initial render =  componentDidMount\r\n  useEffect(() => {\r\n    document.title = \"Dashboard - eCommerce\";\r\n\r\n    //load data from database\r\n    // (async()=>{})()\r\n\r\n    (async () => {\r\n      let ordersResponse = await fetch(\r\n        `http://localhost:5000/orders?userid=${ur.user.currentUserId}`,\r\n        { method: \"GET\" }\r\n      );\r\n\r\n      if (ordersResponse.ok) {\r\n        //status code is 200\r\n        let ordersResponseBody = await ordersResponse.json();\r\n        //  console.log(ordersResponseBody);\r\n\r\n        //get all data from products\r\n        let productsResponse =await fetch(`http://localhost:5000/products`,\r\n          {\r\n            method: \"GET\",\r\n          });\r\n        if (productsResponse.ok) {\r\n          let productsResponseBody = await productsResponse.json();\r\n          //read all orders data\r\n// console.log(productsResponseBody);\r\n\r\n          ordersResponseBody.forEach((ele) => {\r\n            ele.product = productsResponseBody.find(\r\n              (prod) => prod.id === ele.productId\r\n            );\r\n          });\r\n          \r\n        }\r\n        // console.log(ordersResponseBody);\r\n        setorders(ordersResponseBody)\r\n      }\r\n    })();\r\n  }, [ur.user.currentUserId]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-12 py-3 header\">\r\n        <h4>\r\n          <i className=\"fa fa-dashboard\"></i> Dashboard\r\n        </h4>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        {/* previous orders starts*/}\r\n        <div className=\"col-lg-6\">\r\n          <h4 className=\"py-2 my-2 text-info border-bottom border-info\">\r\n            <i className=\"fa fa-history\"></i> Previous Orders{\" \"}\r\n            <span className=\"badge badge-info text-primary\">{getPreviousOrders(orders).length}</span>\r\n          </h4>\r\n          {getPreviousOrders(orders).length===0?(\r\n            <div className=\"text-danger\">No orders</div>\r\n          ):('')}\r\n          {\r\n            getPreviousOrders(orders).map((ord)=>{\r\n              return <Order\r\n               key={ord.id} \r\n              orderId={ord.id} \r\n              productId={ord.productId} \r\n              userId={ord.userId} \r\n              isPaymentCompleted={ord.isPaymentCompleted} \r\n              quantity={ord.quantity} \r\n              productName={ord.product.productName} \r\n              price={ord.product.price}/>\r\n            })\r\n          }\r\n        </div>\r\n        {/* previous orders ends*/}\r\n\r\n        {/* cart starts*/}\r\n        <div className=\"col-lg-6\">\r\n          <h4 className=\"py-2 my-2 text-primary border-bottom border-primary\">\r\n            <i className=\"fa fa-shopping-cart\"></i> Cart{\" \"}\r\n            <span className=\"badge badge-primary text-primary\">{getCart(orders).length}</span>\r\n          </h4>\r\n          {getCart(orders).length===0?(\r\n            <div className=\"text-danger\">No product in your cart</div>\r\n          ):('')}\r\n          {\r\n            getCart(orders).map((ord)=>{\r\n              return <Order\r\n               key={ord.id} \r\n              orderId={ord.id} \r\n              productId={ord.productId} \r\n              userId={ord.userId} \r\n              isPaymentCompleted={ord.isPaymentCompleted} \r\n              quantity={ord.quantity} \r\n              productName={ord.product.productName} \r\n              price={ord.product.price}/>\r\n            })\r\n          }\r\n        </div>\r\n        {/* cart ends*/}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}