{"ast":null,"code":"var _jsxFileName = \"E:\\\\sahiltinku\\\\appcode\\\\e-commerce\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  let [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n    fullName: \"\",\n    dateOfbirth: \"\",\n    gender: \"\",\n    country: \"\",\n    receiveNewsLetters: \"\"\n  });\n  let [countries] = useState([{\n    id: 1,\n    countryName: \"India\"\n  }, {\n    id: 2,\n    countryName: \"USA\"\n  }, {\n    id: 3,\n    countryName: \"UK\"\n  }, {\n    id: 4,\n    countryName: \"Japan\"\n  }, {\n    id: 5,\n    countryName: \"France\"\n  }, {\n    id: 6,\n    countryName: \"Brazil\"\n  }, {\n    id: 7,\n    countryName: \"Mexico\"\n  }, {\n    id: 8,\n    countryName: \"Canada\"\n  }]);\n  let [errors, setErrors] = useState({\n    email: [],\n    password: [],\n    fullName: [],\n    dateOfbirth: [],\n    gender: [],\n    country: [],\n    receiveNewsLetters: []\n  });\n  let [dirty, setDirty] = useState({\n    email: false,\n    password: false,\n    fullName: false,\n    dateOfbirth: false,\n    gender: false,\n    country: false,\n    receiveNewsLetters: false\n  });\n  let [message, setMessage] = useState(\"\");\n\n  //executes only once - on initial render =  componentDidMount\n  useEffect(() => {\n    document.title = \"Register - eCommerce\";\n  }, []);\n  const validate = () => {\n    let errorsData = {};\n\n    //email\n    errorsData.email = [];\n    // condition1\n    if (!state.email) {\n      errorsData.email.push(\"Email can't be blank\");\n    }\n    //condition 2\n    const validEmailRegex = /\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\n    if (state.email) {\n      if (!validEmailRegex.test(state.email)) {\n        errorsData.email.push(\"Proper email address is expected\");\n      }\n    }\n\n    //password\n    errorsData.password = [];\n    // condition1\n    if (!state.password) {\n      errorsData.password.push(\"Password can't be blank\");\n    }\n    //condition 2\n    const validPasswordRegex = /((?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,15})/;\n    if (state.password) {\n      if (!validPasswordRegex.test(state.password)) {\n        errorsData.password.push(\"Password should be 6 to 15 characters long with at least one uppercase letter, one lowercase letter and one digit\");\n      }\n    }\n\n    //fullName\n    errorsData.fullName = [];\n\n    //fullName can't blank\n    if (!state.fullName) {\n      errorsData.fullName.push(\"Full Name can't be blank\");\n    }\n\n    //dateOfBirth\n    errorsData.dateOfbirth = [];\n\n    //dateOfBirth can't blank\n    if (!state.dateOfbirth) {\n      errorsData.dateOfbirth.push(\"Date of Birth can't be blank\");\n    }\n\n    //gender\n    errorsData.gender = [];\n\n    //gender can't blank\n    if (!state.gender) {\n      errorsData.gender.push(\"Please select gender either male or female\");\n    }\n\n    //country\n    errorsData.country = [];\n\n    //country can't blank\n    if (!state.country) {\n      errorsData.country.push(\"Please select a country\");\n    }\n    //newsletter\n    errorsData.receiveNewsLetters = [];\n    setErrors(errorsData);\n  };\n  useEffect(validate, [state]);\n  let onRegisterClick = async () => {\n    //set all controls as dirty\n    let dirtyData = dirty;\n    Object.keys(dirty).forEach(control => {\n      dirtyData[control] = true;\n    });\n    setDirty(dirtyData);\n    validate();\n    if (isValid()) {\n      let response = await fetch(\"http://localhost:5000/users\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: state.email,\n          password: state.password,\n          fullName: state.fullName,\n          dateOfBirth: state.dateOfBirth,\n          gender: state.gender,\n          country: state.country,\n          receiveNewsLetters: state.receiveNewsLetters\n        }),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        setMessage( /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-success\",\n          children: \"Successfully Registered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 5\n        }, this));\n      } else {\n        setMessage( /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-danger\",\n          children: \"Errors in database connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 5\n        }, this));\n      }\n    } else {\n      setMessage( /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: \"Errors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 14\n      }, this));\n    }\n  };\n  let isValid = () => {\n    let valid = true;\n\n    //reading all controls from 'errors' state\n    for (let control in errors) {\n      if (errors[control].length > 0) {\n        valid = false;\n      }\n    }\n    return valid;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-lg-6 col-md-7 mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-border-primary\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header border-bottom border-primary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-primary text-center\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-danger\",\n            children: Object.keys(errors).map(ele => {\n              if (dirty[ele] === true) {\n                return errors[ele].map(err => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"text-danger\",\n                    children: err\n                  }, err, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 10\n                  }, this);\n                });\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body border-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              className: \"col-lg-4\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-8\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"email\",\n                className: \"form-control\",\n                id: \"email\",\n                value: state.email,\n                onChange: e => {\n                  setState({\n                    ...state,\n                    [e.target.name]: e.target.value\n                  });\n                },\n                onBlur: e => {\n                  setDirty({\n                    ...dirty,\n                    [e.target.name]: e\n                  });\n                  validate();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              className: \"col-lg-4\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-8\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                name: \"password\",\n                className: \"form-control\",\n                id: \"password\",\n                value: state.password,\n                onChange: e => {\n                  setState({\n                    ...state,\n                    [e.target.name]: e.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-lg-4\",\n              htmlFor: \"fullName\",\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-8\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                name: \"fullName\",\n                id: \"fullName\",\n                value: state.fullName,\n                onChange: event => {\n                  setState({\n                    ...state,\n                    [event.target.name]: event.target.value\n                  });\n                },\n                onBlur: event => {\n                  setDirty({\n                    ...dirty,\n                    [event.target.name]: true\n                  });\n                  validate();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"dateOfbirth\",\n              className: \"col-lg-4\",\n              children: \"Date Of Birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-8\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                name: \"dateOfbirth\",\n                className: \"form-control\",\n                id: \"dateOfbirth\",\n                value: state.dateOfbirth,\n                onChange: e => {\n                  setState({\n                    ...state,\n                    [e.target.name]: e.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-lg-4\",\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"gender\",\n                  value: \"male\",\n                  id: \"male\",\n                  className: \"form-check-input\",\n                  checked: state.gender === 'male' ? true : false,\n                  onChange: e => {\n                    setState({\n                      ...state,\n                      [e.target.name]: e.target.value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-inline\",\n                  htmlFor: \"male\",\n                  children: \"Male\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"gender\",\n                  value: \"female\",\n                  id: \"female\",\n                  className: \"form-check-input\",\n                  checked: state.gender === 'female' ? true : false,\n                  onChange: e => {\n                    setState({\n                      ...state,\n                      [e.target.name]: e.target.value\n                    });\n                  },\n                  s: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-inline\",\n                  htmlFor: \"female\",\n                  children: \"Female\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-lg-4\",\n              htmlFor: \"country\",\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-8\",\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control\",\n                name: \"country\",\n                id: \"country\",\n                value: state.country,\n                onChange: e => {\n                  setState({\n                    ...state,\n                    [e.target.name]: e.target.value\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Please Select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 19\n                }, this), countries.map(ele => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: ele.id,\n                    children: ele.countryName\n                  }, ele.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 23\n                  }, this);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-lg-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-8\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  name: \"receiveNewsLetters\",\n                  value: \"true\",\n                  id: \"receiveNewsLetters\",\n                  className: \"form-check-input\",\n                  checked: state.receiveNewsLetters === true ? true : false,\n                  onChange: e => {\n                    setState({\n                      ...state,\n                      [e.target.name]: e.target.checked\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-inline\",\n                  htmlFor: \"receiveNewsLetters\",\n                  children: \"Receive News Letters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-footer text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-1\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary m-2\",\n              onClick: onRegisterClick,\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"kUV4RSNXnfNypPAetZENCS4mWSQ=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","Register","state","setState","email","password","fullName","dateOfbirth","gender","country","receiveNewsLetters","countries","id","countryName","errors","setErrors","dirty","setDirty","message","setMessage","document","title","validate","errorsData","push","validEmailRegex","test","validPasswordRegex","onRegisterClick","dirtyData","Object","keys","forEach","control","isValid","response","fetch","method","body","JSON","stringify","dateOfBirth","headers","ok","valid","length","map","ele","err","e","target","name","value","event","checked"],"sources":["E:/sahiltinku/appcode/e-commerce/src/Register.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Register = () => {\r\n  let [state, setState] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    fullName: \"\",\r\n    dateOfbirth: \"\",\r\n    gender: \"\",\r\n    country: \"\",\r\n    receiveNewsLetters: \"\",\r\n  });\r\n\r\n  let [countries] = useState([\r\n    { id: 1, countryName: \"India\" },\r\n    { id: 2, countryName: \"USA\" },\r\n    { id: 3, countryName: \"UK\" },\r\n    { id: 4, countryName: \"Japan\" },\r\n    { id: 5, countryName: \"France\" },\r\n    { id: 6, countryName: \"Brazil\" },\r\n    { id: 7, countryName: \"Mexico\" },\r\n    { id: 8, countryName: \"Canada\" },\r\n  ]);\r\n\r\n  let [errors, setErrors] = useState({\r\n    email: [],\r\n    password: [],\r\n    fullName: [],\r\n    dateOfbirth: [],\r\n    gender: [],\r\n    country: [],\r\n    receiveNewsLetters: [],\r\n  });\r\n\r\n  let [dirty, setDirty] = useState({\r\n    email: false,\r\n    password: false,\r\n    fullName: false,\r\n    dateOfbirth: false,\r\n    gender: false,\r\n    country: false,\r\n    receiveNewsLetters: false,\r\n  });\r\n\r\n  let [message, setMessage] = useState(\"\");\r\n\r\n  //executes only once - on initial render =  componentDidMount\r\n  useEffect(() => {\r\n    document.title = \"Register - eCommerce\";\r\n  }, []);\r\n\r\n  const validate = () => {\r\n    let errorsData = {};\r\n\r\n//email\r\nerrorsData.email = [];\r\n// condition1\r\nif (!state.email) {\r\n  errorsData.email.push(\"Email can't be blank\");\r\n}\r\n//condition 2\r\nconst validEmailRegex = /\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\r\nif (state.email) {\r\n  if (!validEmailRegex.test(state.email)) {\r\n    errorsData.email.push(\"Proper email address is expected\");\r\n  }\r\n}\r\n\r\n//password\r\nerrorsData.password = [];\r\n// condition1\r\nif (!state.password) {\r\n  errorsData.password.push(\"Password can't be blank\");\r\n}\r\n//condition 2\r\nconst validPasswordRegex = /((?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,15})/;\r\nif (state.password) {\r\n  if (!validPasswordRegex.test(state.password)) {\r\n    errorsData.password.push(\r\n      \"Password should be 6 to 15 characters long with at least one uppercase letter, one lowercase letter and one digit\"\r\n    );\r\n  }\r\n}\r\n\r\n //fullName\r\n errorsData.fullName = [];\r\n\r\n //fullName can't blank\r\n if (!state.fullName) {\r\n   errorsData.fullName.push(\"Full Name can't be blank\");\r\n }\r\n\r\n //dateOfBirth\r\n errorsData.dateOfbirth = [];\r\n\r\n //dateOfBirth can't blank\r\n if (!state.dateOfbirth) {\r\n   errorsData.dateOfbirth.push(\"Date of Birth can't be blank\");\r\n }\r\n\r\n\r\n//gender\r\nerrorsData.gender = [];\r\n\r\n//gender can't blank\r\nif (!state.gender) {\r\n  errorsData.gender.push(\"Please select gender either male or female\");\r\n}\r\n\r\n//country\r\nerrorsData.country = [];\r\n\r\n//country can't blank\r\nif (!state.country) {\r\n  errorsData.country.push(\"Please select a country\");\r\n}\r\n//newsletter\r\nerrorsData.receiveNewsLetters = [];\r\nsetErrors(errorsData);\r\n  };\r\n\r\n  useEffect(validate, [state]);\r\n\r\nlet onRegisterClick =async () =>{\r\n//set all controls as dirty\r\nlet dirtyData = dirty;\r\nObject.keys(dirty).forEach((control) => {\r\n  dirtyData[control] = true;\r\n});\r\nsetDirty(dirtyData);\r\n\r\nvalidate();\r\nif(isValid()){\r\n  let response = await fetch(\"http://localhost:5000/users\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          email: state.email,\r\n          password: state.password,\r\n          fullName: state.fullName,\r\n          dateOfBirth: state.dateOfBirth,\r\n          gender: state.gender,\r\n          country: state.country,\r\n          receiveNewsLetters: state.receiveNewsLetters\r\n        }),\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      });\r\n\r\nif(response.ok){\r\n  setMessage(\r\n    <span className=\"text-success\">Successfully Registered</span>\r\n  );\r\n\r\n}else{\r\n  setMessage(\r\n    <span className=\"text-danger\">Errors in database connection</span>\r\n  );\r\n}\r\n\r\n}else{\r\n  setMessage(<span className=\"text-danger\">Errors</span>);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  let isValid = () => {\r\n    let valid = true;\r\n\r\n    //reading all controls from 'errors' state\r\n    for (let control in errors) {\r\n      if (errors[control].length > 0) {\r\n        valid = false;\r\n      }\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-lg-6 col-md-7 mx-auto\">\r\n        <div className=\"card-border-primary\">\r\n          <div className=\"card-header border-bottom border-primary\">\r\n            <h4 className=\"text-primary text-center\">Register</h4>\r\n\r\n<ul className=\"text-danger\">\r\n  {\r\n    Object.keys(errors).map((ele)=>{\r\n      if(dirty[ele] === true){\r\nreturn errors[ele].map((err)=>{\r\n  return <li key={err} className=\"text-danger\">{err}</li>\r\n})\r\n      }\r\n    })\r\n  }\r\n</ul>\r\n\r\n          </div>\r\n          <div className=\"card-body border-bottom\">\r\n            <div className=\"form-group form-row\">\r\n              <label htmlFor=\"email\" className=\"col-lg-4\">\r\n                Email\r\n              </label>\r\n              <div className=\"col-lg-8\">\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  className=\"form-control\"\r\n                  id=\"email\"\r\n                  value = {state.email}\r\n                  onChange = {(e)=>{setState({...state,[e.target.name]:e.target.value})}}\r\n                  onBlur = {(e)=>{\r\n                    setDirty({...dirty,[e.target.name]:e})\r\n                    validate()\r\n\r\n                  }}\r\n                  \r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n              <label htmlFor=\"password\" className=\"col-lg-4\">\r\n                Password\r\n              </label>\r\n              <div className=\"col-lg-8\">\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  className=\"form-control\"\r\n                  id=\"password\"\r\n                  value = {state.password}\r\n                  onChange = {(e)=>{setState({...state,[e.target.name]:e.target.value})}}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n                {/* fullName starts */}\r\n                <div className=\"form-group form-row\">\r\n              <label className=\"col-lg-4\" htmlFor=\"fullName\">\r\n                Full Name\r\n              </label>\r\n              <div className=\"col-lg-8\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"fullName\"\r\n                  id=\"fullName\"\r\n                  value={state.fullName}\r\n                  onChange={(event) => {\r\n                    setState({\r\n                      ...state,\r\n                      [event.target.name]: event.target.value,\r\n                    });\r\n                  }}\r\n                  onBlur={(event) => {\r\n                    setDirty({ ...dirty, [event.target.name]: true });\r\n                    validate();\r\n                  }}\r\n                />\r\n\r\n               \r\n              </div>\r\n            </div>\r\n            {/* fullName ends */}\r\n\r\n            <div className=\"form-group form-row\">\r\n              <label htmlFor=\"dateOfbirth\" className=\"col-lg-4\">\r\n                Date Of Birth\r\n              </label>\r\n              <div className=\"col-lg-8\">\r\n                <input\r\n                  type=\"date\"\r\n                  name=\"dateOfbirth\"\r\n                  className=\"form-control\"\r\n                  id=\"dateOfbirth\"\r\n                  value = {state.dateOfbirth}\r\n                  onChange = {(e)=>{setState({...state,[e.target.name]:e.target.value})}}\r\n                />\r\n              </div>\r\n            </div>\r\n            {/* gender starts */}\r\n            <div className=\"form-group form-row\">\r\n              <label className=\"col-lg-4\">Gender</label>\r\n              <div className=\"col-lg-8\">\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"gender\"\r\n                    value=\"male\"\r\n                    id=\"male\"\r\n                    className=\"form-check-input\"\r\n                    checked={state.gender==='male' ? true:false}\r\n                    onChange = {(e)=>{setState({...state,[e.target.name]:e.target.value})}}\r\n\r\n                  />\r\n\r\n                  <label className=\"form-check-inline\" htmlFor=\"male\">\r\n                    Male\r\n                  </label>\r\n                </div>\r\n\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"gender\"\r\n                    value=\"female\"\r\n                    id=\"female\"\r\n                    className=\"form-check-input\"\r\n                    checked={state.gender==='female' ? true:false}\r\n                    onChange = {(e)=>{setState({...state,[e.target.name]:e.target.value})}}s\r\n                  />\r\n\r\n                  <label className=\"form-check-inline\" htmlFor=\"female\">\r\n                    Female\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* gender ends */}\r\n            {/* country starts */}\r\n            <div className=\"form-group form-row\">\r\n              <label className=\"col-lg-4\" htmlFor=\"country\">\r\n                Country\r\n              </label>\r\n              <div className=\"col-lg-8\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"country\"\r\n                  id=\"country\"\r\n                  value={state.country}\r\n                  onChange={(e) => {\r\n                    setState({ ...state, [e.target.name]: e.target.value });\r\n                    \r\n                  }}\r\n                >\r\n                  <option value=\"\">Please Select</option>\r\n                  {countries.map((ele) => {\r\n                    return (\r\n                      <option key={ele.id} value={ele.id}>\r\n                        {ele.countryName}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            {/* country ends */}\r\n\r\n            {/* receiveNewsLetters starts */}\r\n            <div className=\"form-group form-row\">\r\n              <label className=\"col-lg-4\"></label>\r\n              <div className=\"col-lg-8\">\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"receiveNewsLetters\"\r\n                    value=\"true\"\r\n                    id=\"receiveNewsLetters\"\r\n                    className=\"form-check-input\"\r\n                    checked={state.receiveNewsLetters===true ? true:false}\r\n                    onChange={(e) => {\r\n                      setState({ ...state, [e.target.name]: e.target.checked});\r\n                      \r\n                    }}\r\n                  />\r\n\r\n                  <label\r\n                    className=\"form-check-inline\"\r\n                    htmlFor=\"receiveNewsLetters\"\r\n                  >\r\n                    Receive News Letters\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* receiveNewsLetters ends */}\r\n          </div>\r\n          {/* footer starts */}\r\n          <div className=\"card-footer text-center\">\r\n            <div className=\"m-1\">{message}</div>\r\n            <div>\r\n              <button className=\"btn btn-primary m-2\" onClick={onRegisterClick}>Register</button>\r\n            </div>\r\n          </div>\r\n          {/* footer ends */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n                  }\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}