{"ast":null,"code":"var _jsxFileName = \"E:\\\\sahiltinku\\\\appcode\\\\e-commerce\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { uc } from \"./UserContext\";\nimport { useContext } from \"react\";\nimport Order from \"./Order\";\nimport { OrdersService, ProductsService } from './Service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  let [orders, setorders] = useState([]);\n  console.log(orders);\n\n  //get context\n  let ur = useContext(uc);\n  let loadDataFromDatabase = useCallback(async () => {\n    let ordersResponse = await fetch(`http://localhost:5000/orders?userid=${ur.user.currentUserId}`, {\n      method: \"GET\"\n    });\n    if (ordersResponse.ok) {\n      //status code is 200\n      let ordersResponseBody = await ordersResponse.json();\n      //  console.log(ordersResponseBody);\n\n      //get all data from products\n      let productsResponse = await ProductsService.fetchProducts();\n      if (productsResponse.ok) {\n        let productsResponseBody = await productsResponse.json();\n        //read all orders data\n        // console.log(productsResponseBody);\n\n        ordersResponseBody.forEach(ele => {\n          ele.product = ProductsService.getProductByProductId(productsResponseBody, ele.productId);\n        });\n      }\n      console.log(ordersResponseBody);\n      setorders(ordersResponseBody);\n    }\n  }, [ur.user.currentUserId]);\n\n  //executes only once - on initial render =  componentDidMount\n  useEffect(() => {\n    document.title = \"Dashboard - eCommerce\";\n    loadDataFromDatabase();\n    //load data from database\n    // (async()=>{})()   \n  }, [ur.user.currentUserId, loadDataFromDatabase]);\n  //when the user clicks on buy now\n\n  let onBuyNowClick = async (orderID, userId, productId, quantity) => {\n    if (window.confirm(\"Do you want to place order fro this product\")) {\n      let updateOrder = {\n        id: orderID,\n        productId: productId,\n        userId: userId,\n        quantity: quantity,\n        isPaymentCompleted: true\n      };\n      let orderResponse = await fetch(`http://localhost:5000/orders/${orderID}`, {\n        method: 'PUT',\n        body: JSON.stringify(updateOrder),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      });\n      let ordersResponseBody = await orderResponse.json();\n      if (orderResponse.ok) {\n        console.log(ordersResponseBody);\n        loadDataFromDatabase();\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 py-3 header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), \" Dashboard\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-info ms-4\",\n          onClick: loadDataFromDatabase,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), \"REFRESH\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"py-2 my-2 text-info border-bottom border-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-history\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), \" Previous Orders\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge badge-info text-primary\",\n            children: OrdersService.getPreviousOrder(orders).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), OrdersService.getPreviousOrder(orders).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger\",\n          children: \"No orders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this) : '', OrdersService.getPreviousOrder(orders).map(ord => {\n          return /*#__PURE__*/_jsxDEV(Order, {\n            orderId: ord.id,\n            productId: ord.productId,\n            userId: ord.userId,\n            isPaymentCompleted: ord.isPaymentCompleted,\n            quantity: ord.quantity,\n            productName: ord.product.productname,\n            price: ord.product.price,\n            onBuyNowClick: onBuyNowClick\n          }, ord.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 22\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"py-2 my-2 text-primary border-bottom border-primary\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-shopping-cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), \" Cart\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge badge-primary text-primary\",\n            children: OrdersService.getPreviousOrder(orders).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), OrdersService.getCart(orders).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-danger\",\n          children: \"No product in your cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this) : '', OrdersService.getCart(orders).map(ord => {\n          return /*#__PURE__*/_jsxDEV(Order, {\n            orderId: ord.id,\n            productId: ord.productId,\n            userId: ord.userId,\n            isPaymentCompleted: ord.isPaymentCompleted,\n            quantity: ord.quantity,\n            productName: ord.product.productName,\n            price: ord.product.price,\n            onBuyNowClick: onBuyNowClick\n          }, ord.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 22\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"ovtCHGRgoh8VBT/i1KqoI8GZrP4=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","uc","useContext","Order","OrdersService","ProductsService","Dashboard","orders","setorders","console","log","ur","loadDataFromDatabase","ordersResponse","fetch","user","currentUserId","method","ok","ordersResponseBody","json","productsResponse","fetchProducts","productsResponseBody","forEach","ele","product","getProductByProductId","productId","document","title","onBuyNowClick","orderID","userId","quantity","window","confirm","updateOrder","id","isPaymentCompleted","orderResponse","body","JSON","stringify","headers","getPreviousOrder","length","map","ord","productname","price","getCart","productName"],"sources":["E:/sahiltinku/appcode/e-commerce/src/Dashboard.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { uc } from \"./UserContext\";\r\nimport { useContext } from \"react\";\r\nimport Order from \"./Order\";\r\nimport {OrdersService,ProductsService}from './Service';\r\nconst Dashboard = () => {\r\n  let [orders, setorders] = useState([]);\r\nconsole.log(orders)\r\n\r\n  //get context\r\n  let ur = useContext(uc);\r\n let loadDataFromDatabase = useCallback(async () => {\r\n  let ordersResponse = await fetch(\r\n    `http://localhost:5000/orders?userid=${ur.user.currentUserId}`,\r\n    { method: \"GET\" }\r\n  );\r\n\r\n  if (ordersResponse.ok) {\r\n    //status code is 200\r\n    let ordersResponseBody = await ordersResponse.json();\r\n    //  console.log(ordersResponseBody);\r\n\r\n    //get all data from products\r\n    let productsResponse =await ProductsService.fetchProducts()\r\n    if (productsResponse.ok) {\r\n      let productsResponseBody = await productsResponse.json();\r\n      //read all orders data\r\n// console.log(productsResponseBody);\r\n\r\n      ordersResponseBody.forEach((ele) => {\r\n        ele.product = ProductsService.getProductByProductId(productsResponseBody,ele.productId)\r\n      });\r\n      \r\n    }\r\n    console.log(ordersResponseBody);\r\n    setorders(ordersResponseBody)\r\n  }\r\n},[ur.user.currentUserId])\r\n  \r\n  //executes only once - on initial render =  componentDidMount\r\n  useEffect(() => {\r\n    document.title = \"Dashboard - eCommerce\";\r\nloadDataFromDatabase();\r\n    //load data from database\r\n    // (async()=>{})()   \r\n  }, [ur.user.currentUserId,loadDataFromDatabase]);\r\n//when the user clicks on buy now\r\n\r\nlet onBuyNowClick = async(orderID,userId,productId,quantity)=>{\r\nif(window.confirm(\"Do you want to place order fro this product\"))\r\n{\r\nlet updateOrder ={\r\n  id:orderID,\r\n  productId:productId,\r\n  userId:userId,\r\n  quantity:quantity,\r\n  isPaymentCompleted:true\r\n}\r\nlet orderResponse = await fetch(`http://localhost:5000/orders/${orderID}`,{\r\n  method:'PUT',\r\n  body:JSON.stringify(updateOrder),\r\nheaders : {\r\n  \"Content-type\":\"application/json\"\r\n}\r\n\r\n})\r\nlet ordersResponseBody = await orderResponse.json();\r\nif(orderResponse.ok){\r\n  console.log(ordersResponseBody);\r\n  loadDataFromDatabase()\r\n}\r\n}\r\n}\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-12 py-3 header\">\r\n        <h4>\r\n          <i className=\"fa fa-dashboard\" ></i> Dashboard\r\n        <button className=\"btn btn-info ms-4\" onClick={loadDataFromDatabase}>\r\n          <i className=\"fa fa-refresh\"></i>\r\n          REFRESH\r\n        </button>\r\n        </h4>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        {/* previous orders starts*/}\r\n        <div className=\"col-lg-6\">\r\n          <h4 className=\"py-2 my-2 text-info border-bottom border-info\">\r\n            <i className=\"fa fa-history\"></i> Previous Orders{\" \"}\r\n            <span className=\"badge badge-info text-primary\">{OrdersService.getPreviousOrder(orders).length}</span>\r\n          </h4>\r\n          {OrdersService.getPreviousOrder(orders).length===0?(\r\n            <div className=\"text-danger\">No orders</div>\r\n          ):('')}\r\n          {\r\n           OrdersService.getPreviousOrder(orders).map((ord)=>{\r\n              return <Order\r\n               key={ord.id} \r\n              orderId={ord.id} \r\n              productId={ord.productId} \r\n              userId={ord.userId} \r\n              isPaymentCompleted={ord.isPaymentCompleted} \r\n              quantity={ord.quantity} \r\n              productName={ord.product.productname} \r\n              price={ord.product.price}\r\n              onBuyNowClick={onBuyNowClick}/>\r\n            })\r\n          }\r\n        </div>\r\n        {/* previous orders ends*/}\r\n\r\n        {/* cart starts*/}\r\n        <div className=\"col-lg-6\">\r\n          <h4 className=\"py-2 my-2 text-primary border-bottom border-primary\">\r\n            <i className=\"fa fa-shopping-cart\"></i> Cart{\" \"}\r\n            <span className=\"badge badge-primary text-primary\">{OrdersService.getPreviousOrder(orders).length}</span>\r\n          </h4>\r\n          {OrdersService.getCart(orders).length===0?(\r\n            <div className=\"text-danger\">No product in your cart</div>\r\n          ):('')}\r\n          {\r\n            OrdersService.getCart(orders).map((ord)=>{\r\n              return <Order\r\n               key={ord.id} \r\n              orderId={ord.id} \r\n              productId={ord.productId} \r\n              userId={ord.userId} \r\n              isPaymentCompleted={ord.isPaymentCompleted} \r\n              quantity={ord.quantity} \r\n              productName={ord.product.productName} \r\n              price={ord.product.price}\r\n              onBuyNowClick={onBuyNowClick}/>\r\n             \r\n            })\r\n          }\r\n        </div>\r\n        {/* cart ends*/}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}