{"ast":null,"code":"var _jsxFileName = \"E:\\\\sahiltinku\\\\appcode\\\\e-commerce\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  var [email, setEmail] = useState(\"\");\n  var [password, setPassword] = useState(\"\");\n  let [errors, setErrors] = useState({\n    email: [],\n    password: []\n  });\n\n  //executes only once - on initial render =  componentDidMount\n  useEffect(() => {\n    document.title = \"Login - eCommerce\";\n  }, []);\n\n  // a function to validate email and password\n  let validate = () => {\n    //variable to store errorsData\n    let errorsData = {};\n\n    //email\n    errorsData.email = [];\n    // condition 1\n    if (!email) {\n      errorsData.email.push(\"Email can't be blank\");\n    }\n    // condition 2\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-lg-5 col-md-7 mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card border-primary shadow-lg my-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header border-bottom border-success\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              fontSize: \"40px\"\n            },\n            className: \"text-primary text-center\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body border-bottom border-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control\",\n              id: \"email\",\n              name: \"email\",\n              placeholder: \"Email\",\n              value: email,\n              onChange: e => {\n                setEmail(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control\",\n              id: \"password\",\n              name: \"password\",\n              placeholder: \"Password\",\n              value: password,\n              onChange: e => {\n                setPassword(e.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-footer text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-1\",\n            children: \"Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success m-2\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"8v11XTPujVsm/MJfaXHhStdAnc4=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Login","email","setEmail","password","setPassword","errors","setErrors","document","title","validate","errorsData","push","fontSize","e","target","value"],"sources":["E:/sahiltinku/appcode/e-commerce/src/Login.js"],"sourcesContent":["import React,{useState, useEffect} from 'react'\r\n\r\nconst Login = () => {\r\n  var [email, setEmail] = useState(\"\");\r\n  var [password, setPassword] = useState(\"\");\r\n\r\n\r\n  let [errors, setErrors] = useState( {email: [], password: [],} );\r\n\r\n //executes only once - on initial render =  componentDidMount\r\n useEffect(() => {\r\n  document.title = \"Login - eCommerce\";\r\n}, []);\r\n\r\n// a function to validate email and password\r\nlet validate = ()=>{\r\n  //variable to store errorsData\r\n  let errorsData = {};\r\n\r\n//email\r\nerrorsData.email = [];\r\n// condition 1\r\nif(!email){\r\n  errorsData.email.push(\"Email can't be blank\")\r\n}\r\n// condition 2\r\n\r\n\r\n}\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className=\"col-lg-5 col-md-7 mx-auto\">\r\n        <div className=\"card border-primary shadow-lg my-2\">\r\n          <div className=\"card-header border-bottom border-success\">\r\n          <h4\r\n              style={{ fontSize: \"40px\" }}\r\n              className=\"text-primary text-center\"\r\n            >\r\n              Login\r\n            </h4>\r\n\r\n          </div>\r\n       \r\n          <div className=\"card-body border-bottom border-success\">\r\n               {/* col for email */}\r\n            <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input \r\n            type='text' \r\n            className=\"form-control\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e)=>{\r\n              setEmail(e.target.value)\r\n            }}\r\n            />\r\n            </div>\r\n               {/* email ends  */}\r\n               <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input \r\n            type='password' \r\n            className=\"form-control\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e)=>{\r\n              setPassword(e.target.value)\r\n            }}\r\n            />\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className=\"card-footer text-center\">\r\n            <div className=\"m-1\">Message</div>\r\n            <button className=\"btn btn-success m-2\" >\r\n              Login\r\n            </button>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}