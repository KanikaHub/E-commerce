{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import { useNavigate } from 'react-router-dom';\n// import { useContext } from \"react\";\n// import { uc } from \"./UserContext\";\n// const Login = () => {\n// let ur = useContext(uc)\n//   const nav = useNavigate();\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setpassword] = useState(\"\");\n//   let [dirty, setdirty] = useState({\n//     email: false,\n//     password: false,\n//   });\n\n//   let [errors, seterrors] = useState({\n//     email: [],\n//     password: [],\n//   });\n\n//   let [loginMsg, setloginMsg] = useState(\"\");\n//   useEffect(() => {\n//     document.title = \"Login-ECommerce\";\n//   }, []);\n//   // useEffect(() => {\n//   //   //email validation\n//   //   if (email.indexOf(\"@\") > 0) {\n//   //     console.log(\"valid\");\n//   //   } else {\n//   //     console.log(\"Invalid\");\n//   //   }\n//   // }, [email]);\n\n//   const validate = () => {\n//     let errorData = {};\n//     // email\n\n//     errorData.email = [];\n//     if (!email) {\n//       errorData.email.push(\"email cant be blank\");\n//     }\n//     const validEmailRegex = /\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\n//     if (email) {\n//       if (!validEmailRegex.test(email)) {\n//         errorData.email.push(\"Proper email address is expected\");\n//       }\n//     }\n//     //password\n//     errorData.password = [];\n//     //password cant be blank\n\n//     if (!password) {\n//       errorData.password.push(\"password cant be blank\");\n//     }\n//     //password regex\n\n//     const validpasswordRegex = /((?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,15})/;\n//     if (password) {\n//       if (!validpasswordRegex.test(password)) {\n//         errorData.password.push(\"Proper password is expected\");\n//       }\n//     }\n//   }\n\n//   useEffect(validate,[email,password]);\n\n//   let onLoginClick = async () => { \n//     //set all controls as dirty \n//     let dirtyData = dirty; \n//     Object.keys(dirty).forEach((control) => { \n//       dirtyData[control] = true; \n//     }); \n//     setdirty(dirtyData); \n\n//     //call validate \n//     validate(); \n\n//     if (isValid()) { \n//       let response = await fetch( \n//         `http://localhost:5000/users?email=${email}&password=${password}`, \n//         { method: \"GET\" } \n//       ); \n//       if (response.ok) { \n//         //Status code is 200 \n//         let responseBody = await response.json(); \n//         if (responseBody.length > 0) { \n//           // props.history.replace(\"/dashboard\");\n// ur.setuser({\n//   ...ur.user,\n//   isLoggedIn:true,\n//   currentUserName: responseBody[0].fullname,\n//   currentUserId: responseBody[0].id\n// })\n\n//           nav('/dashboard') \n//         } else { \n//           setloginMsg( \n//             <span className=\"text-danger\">Invalid Login, please try again</span> \n//           ); \n//         } \n//       } else { \n//         setloginMsg( \n//           <span className=\"text-danger\">Unable to connect to server</span> \n//         ); \n//       } \n//     } \n//   }; \n\n//   let isValid = () => { \n//     let valid = true; \n\n//     //reading all controls from errors \n//     for (let control in errors) { \n//       if (errors[control].length > 0) valid = false; \n//     } \n\n//     return valid; \n//   };\n\n//   return (\n//     <div className=\"row\">\n//       <div className=\"col-lg-5 col-md-7 mx-auto\">\n//         <div className=\"card border-success shadow-lg my-2\">\n//           <div className=\"card-header border-bottom border-success\">\n//             <h3 className=\"text-success text-center\">Login Form</h3>\n//           </div>\n//           <div className=\"card-body border-bottom border-success\">\n//             {/* email start */}\n\n//             <div className=\"form-group\">\n//               <label htmlFor=\"email\">E-MAIL</label>\n//               <input\n//                 type=\"text\"\n//                 value={email}\n//                 onChange={(e) => {\n//                   setEmail(e.target.value);\n//                 }}\n//                 id=\"email\"\n//                 placeholder=\"E-mail\"\n//                 className=\"form-control\"\n//               />\n//             </div>\n\n//             {/* email end */}\n//             {/* password start */}\n//             <div className=\"form-group\">\n//               <label htmlFor=\"password\">Password</label>\n//               <input\n//                 type=\"text\"\n//                 value={password}\n//                 id=\"password\"\n//                 onChange={(e) => {\n//                   setpassword(e.target.value);\n//                 }}\n//                 placeholder=\"Password\"\n//                 className=\"form-control\"\n//               />\n//             </div>\n//             {/* email end */}\n\n//             <div className=\"card-footer text-center\">\n//               <div className=\"m-1\">\n//                 {loginMsg}\n//               </div>\n//                <button className=\"btn btn-primary\" onClick={onLoginClick}>Login</button>   \n\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Login;","map":{"version":3,"names":[],"sources":["E:/sahiltinku/appcode/e-commerce/src/Login.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { useContext } from \"react\";\r\n// import { uc } from \"./UserContext\";\r\n// const Login = () => {\r\n// let ur = useContext(uc)\r\n//   const nav = useNavigate();\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setpassword] = useState(\"\");\r\n//   let [dirty, setdirty] = useState({\r\n//     email: false,\r\n//     password: false,\r\n//   });\r\n\r\n//   let [errors, seterrors] = useState({\r\n//     email: [],\r\n//     password: [],\r\n//   });\r\n\r\n//   let [loginMsg, setloginMsg] = useState(\"\");\r\n//   useEffect(() => {\r\n//     document.title = \"Login-ECommerce\";\r\n//   }, []);\r\n//   // useEffect(() => {\r\n//   //   //email validation\r\n//   //   if (email.indexOf(\"@\") > 0) {\r\n//   //     console.log(\"valid\");\r\n//   //   } else {\r\n//   //     console.log(\"Invalid\");\r\n//   //   }\r\n//   // }, [email]);\r\n\r\n//   const validate = () => {\r\n//     let errorData = {};\r\n//     // email\r\n\r\n//     errorData.email = [];\r\n//     if (!email) {\r\n//       errorData.email.push(\"email cant be blank\");\r\n//     }\r\n//     const validEmailRegex = /\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\r\n//     if (email) {\r\n//       if (!validEmailRegex.test(email)) {\r\n//         errorData.email.push(\"Proper email address is expected\");\r\n//       }\r\n//     }\r\n//     //password\r\n//     errorData.password = [];\r\n//     //password cant be blank\r\n\r\n//     if (!password) {\r\n//       errorData.password.push(\"password cant be blank\");\r\n//     }\r\n//     //password regex\r\n\r\n//     const validpasswordRegex = /((?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,15})/;\r\n//     if (password) {\r\n//       if (!validpasswordRegex.test(password)) {\r\n//         errorData.password.push(\"Proper password is expected\");\r\n//       }\r\n//     }\r\n//   }\r\n\r\n//   useEffect(validate,[email,password]);\r\n\r\n//   let onLoginClick = async () => { \r\n//     //set all controls as dirty \r\n//     let dirtyData = dirty; \r\n//     Object.keys(dirty).forEach((control) => { \r\n//       dirtyData[control] = true; \r\n//     }); \r\n//     setdirty(dirtyData); \r\n \r\n//     //call validate \r\n//     validate(); \r\n \r\n//     if (isValid()) { \r\n//       let response = await fetch( \r\n//         `http://localhost:5000/users?email=${email}&password=${password}`, \r\n//         { method: \"GET\" } \r\n//       ); \r\n//       if (response.ok) { \r\n//         //Status code is 200 \r\n//         let responseBody = await response.json(); \r\n//         if (responseBody.length > 0) { \r\n//           // props.history.replace(\"/dashboard\");\r\n// ur.setuser({\r\n//   ...ur.user,\r\n//   isLoggedIn:true,\r\n//   currentUserName: responseBody[0].fullname,\r\n//   currentUserId: responseBody[0].id\r\n// })\r\n\r\n//           nav('/dashboard') \r\n//         } else { \r\n//           setloginMsg( \r\n//             <span className=\"text-danger\">Invalid Login, please try again</span> \r\n//           ); \r\n//         } \r\n//       } else { \r\n//         setloginMsg( \r\n//           <span className=\"text-danger\">Unable to connect to server</span> \r\n//         ); \r\n//       } \r\n//     } \r\n//   }; \r\n \r\n//   let isValid = () => { \r\n//     let valid = true; \r\n \r\n//     //reading all controls from errors \r\n//     for (let control in errors) { \r\n//       if (errors[control].length > 0) valid = false; \r\n//     } \r\n \r\n//     return valid; \r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"row\">\r\n//       <div className=\"col-lg-5 col-md-7 mx-auto\">\r\n//         <div className=\"card border-success shadow-lg my-2\">\r\n//           <div className=\"card-header border-bottom border-success\">\r\n//             <h3 className=\"text-success text-center\">Login Form</h3>\r\n//           </div>\r\n//           <div className=\"card-body border-bottom border-success\">\r\n//             {/* email start */}\r\n\r\n//             <div className=\"form-group\">\r\n//               <label htmlFor=\"email\">E-MAIL</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={email}\r\n//                 onChange={(e) => {\r\n//                   setEmail(e.target.value);\r\n//                 }}\r\n//                 id=\"email\"\r\n//                 placeholder=\"E-mail\"\r\n//                 className=\"form-control\"\r\n//               />\r\n//             </div>\r\n\r\n//             {/* email end */}\r\n//             {/* password start */}\r\n//             <div className=\"form-group\">\r\n//               <label htmlFor=\"password\">Password</label>\r\n//               <input\r\n//                 type=\"text\"\r\n//                 value={password}\r\n//                 id=\"password\"\r\n//                 onChange={(e) => {\r\n//                   setpassword(e.target.value);\r\n//                 }}\r\n//                 placeholder=\"Password\"\r\n//                 className=\"form-control\"\r\n//               />\r\n//             </div>\r\n//             {/* email end */}\r\n\r\n//             <div className=\"card-footer text-center\">\r\n//               <div className=\"m-1\">\r\n//                 {loginMsg}\r\n//               </div>\r\n//                <button className=\"btn btn-primary\" onClick={onLoginClick}>Login</button>   \r\n\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Login;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}