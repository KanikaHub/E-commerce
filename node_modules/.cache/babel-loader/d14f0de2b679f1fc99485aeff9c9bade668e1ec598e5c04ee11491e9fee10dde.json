{"ast":null,"code":"var _jsxFileName = \"E:\\\\sahiltinku\\\\appcode\\\\e-commerce\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext, useState, useCallback } from \"react\";\nimport { uc } from \"./UserContext\";\nimport Order from \"./Order\";\nimport { OrdersService } from \"./Service\";\nimport { ProductsService } from \"./Service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  let [orders, setOrders] = useState([]);\n\n  //get context\n  let ur = useContext(uc);\n  let loadDataFromDatabase = useCallback(async () => {\n    let ordersResponse = await fetch(`http://localhost:5000/orders?userid=${ur.user.currentUserId}`, {\n      method: \"GET\"\n    });\n    if (ordersResponse.ok) {\n      //status code is 200\n      let ordersResponseBody = await ordersResponse.json();\n\n      //get all data from products\n      let productsResponse = await ProductsService.fetchProducts();\n      if (productsResponse.ok) {\n        let productsResponseBody = await productsResponse.json();\n\n        //read all orders data\n        ordersResponseBody.forEach(order => {\n          order.product = productsResponseBody.find(prod => prod.id === order.productId);\n        });\n        console.log(ordersResponseBody);\n        setOrders(ordersResponseBody);\n      }\n    }\n  }, [ur.user.currentUserId]);\n  //executes only once - on initial render =  componentDidMount\n  useEffect(() => {\n    document.title = \"Dashboard - eCommerce\";\n    loadDataFromDatabase();\n  }, [ur.user.currentUserId, loadDataFromDatabase]);\n  const onBuyNowClick = useCallback(() => {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 py-3 header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), \" Dashboard\", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sm btn-info \",\n          onClick: loadDataFromDatabase,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-refresh\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 1\n          }, this), \" Refresh\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"py-2 my-2 text-info border-bottom border-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-history\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), \" Previous Orders\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge badge-info\",\n              children: OrdersService.getPreviousOrders(orders).length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), OrdersService.getPreviousOrders(orders).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger\",\n            children: \"No Orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this) : \"\", OrdersService.getPreviousOrders(orders).map(ord => {\n            return /*#__PURE__*/_jsxDEV(Order, {\n              orderId: ord.id,\n              productId: ord.productId,\n              userId: ord.userId,\n              isPaymentCompleted: ord.isPaymentCompleted,\n              quantity: ord.quantity,\n              productName: ord.product.productName,\n              price: ord.product.price\n            }, ord.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"py-2 my-2 text-primary border-bottom border-primary\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-shopping-cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), \" Cart\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge badge-primary\",\n              children: OrdersService.getCart(orders).length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), OrdersService.getCart(orders).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger\",\n            children: \"No products in your cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this) : \"\", OrdersService.getCart(orders).map(ord => {\n            return /*#__PURE__*/_jsxDEV(Order, {\n              orderId: ord.id,\n              productId: ord.productId,\n              userId: ord.userId,\n              isPaymentCompleted: ord.isPaymentCompleted,\n              quantity: ord.quantity,\n              productName: ord.product.productName,\n              price: ord.product.price\n            }, ord.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"moAvb0KwfeABIprMdo7jBuWEF0E=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useContext","useState","useCallback","uc","Order","OrdersService","ProductsService","Dashboard","orders","setOrders","ur","loadDataFromDatabase","ordersResponse","fetch","user","currentUserId","method","ok","ordersResponseBody","json","productsResponse","fetchProducts","productsResponseBody","forEach","order","product","find","prod","id","productId","console","log","document","title","onBuyNowClick","getPreviousOrders","length","map","ord","userId","isPaymentCompleted","quantity","productName","price","getCart"],"sources":["E:/sahiltinku/appcode/e-commerce/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useContext, useState, useCallback } from \"react\";\r\nimport { uc } from \"./UserContext\";\r\nimport Order from \"./Order\";\r\nimport { OrdersService } from \"./Service\";\r\nimport { ProductsService } from \"./Service\";\r\n\r\nfunction Dashboard() {\r\n  let [orders, setOrders] = useState([]);\r\n\r\n  //get context\r\n  let ur = useContext(uc);\r\n\r\nlet loadDataFromDatabase =useCallback( async () => {\r\n  let ordersResponse = await fetch(\r\n    `http://localhost:5000/orders?userid=${ur.user.currentUserId}`,\r\n    { method: \"GET\" }\r\n  );\r\n\r\n  if (ordersResponse.ok) {\r\n    //status code is 200\r\n    let ordersResponseBody = await ordersResponse.json();\r\n\r\n    //get all data from products\r\n    let productsResponse = await ProductsService.fetchProducts();\r\n\r\n    if (productsResponse.ok) {\r\n      let productsResponseBody = await productsResponse.json();\r\n\r\n      //read all orders data\r\n      ordersResponseBody.forEach((order) => {\r\n        order.product = productsResponseBody.find(\r\n          (prod) => prod.id === order.productId\r\n        );\r\n      });\r\n\r\n      console.log(ordersResponseBody);\r\n\r\n      setOrders(ordersResponseBody);\r\n    }\r\n  }\r\n},[ur.user.currentUserId])\r\n  //executes only once - on initial render =  componentDidMount\r\n  useEffect(() => {\r\n    document.title = \"Dashboard - eCommerce\";\r\n\r\nloadDataFromDatabase()\r\n  }, [ur.user.currentUserId,loadDataFromDatabase]);\r\n\r\n  const onBuyNowClick= useCallback(()=>{\r\n\r\n  })\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-12 py-3 header\">\r\n        <h4>\r\n          <i className=\"fa fa-dashboard\"></i> Dashboard\r\n\r\n<button className=\"btn btn-sm btn-info \" onClick={loadDataFromDatabase}>\r\n<i className=\"fa fa-refresh\"></i> Refresh\r\n</button>\r\n        </h4>\r\n      </div>\r\n\r\n      <div className=\"col-12\">\r\n        <div className=\"row\">\r\n          {/* previous orders starts*/}\r\n          <div className=\"col-lg-6\">\r\n            <h4 className=\"py-2 my-2 text-info border-bottom border-info\">\r\n              <i className=\"fa fa-history\"></i> Previous Orders{\" \"}\r\n              <span className=\"badge badge-info\">\r\n                {OrdersService.getPreviousOrders(orders).length}\r\n              </span>\r\n            </h4>\r\n\r\n            {OrdersService.getPreviousOrders(orders).length === 0 ? (\r\n              <div className=\"text-danger\">No Orders</div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            {OrdersService.getPreviousOrders(orders).map((ord) => {\r\n              return (\r\n                <Order\r\n                  key={ord.id}\r\n                  orderId={ord.id}\r\n                  productId={ord.productId}\r\n                  userId={ord.userId}\r\n                  isPaymentCompleted={ord.isPaymentCompleted}\r\n                  quantity={ord.quantity}\r\n                  productName={ord.product.productName}\r\n                  price={ord.product.price}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          {/* previous orders ends*/}\r\n\r\n          {/* cart starts*/}\r\n          <div className=\"col-lg-6\">\r\n            <h4 className=\"py-2 my-2 text-primary border-bottom border-primary\">\r\n              <i className=\"fa fa-shopping-cart\"></i> Cart{\" \"}\r\n              <span className=\"badge badge-primary\">\r\n                {OrdersService.getCart(orders).length}\r\n              </span>\r\n            </h4>\r\n\r\n            {OrdersService.getCart(orders).length === 0 ? (\r\n              <div className=\"text-danger\">No products in your cart</div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            {OrdersService.getCart(orders).map((ord) => {\r\n              return (\r\n                <Order\r\n                  key={ord.id}\r\n                  orderId={ord.id}\r\n                  productId={ord.productId}\r\n                  userId={ord.userId}\r\n                  isPaymentCompleted={ord.isPaymentCompleted}\r\n                  quantity={ord.quantity}\r\n                  productName={ord.product.productName}\r\n                  price={ord.product.price}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          {/* cart ends*/}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}