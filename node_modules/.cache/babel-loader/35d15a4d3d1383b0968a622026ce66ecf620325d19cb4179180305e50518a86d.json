{"ast":null,"code":"var _jsxFileName = \"E:\\\\sahiltinku\\\\appcode\\\\e-commerce\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { uc } from './Usercontext';\nimport Order from './Order';\n\n//  get previous order\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet getPreviousOrders = orders => {\n  return orders.filter(ord => {\n    return ord.isPaymentCompleted === true;\n  });\n};\n// get cart \n\nlet getCart = orders => {\n  return orders.filter(ord => {\n    return ord.isPaymentCompleted === false;\n  });\n};\nfunction Dashboard() {\n  _s();\n  const [orders, setOrders] = useState([]);\n\n  // get context\n  let ur = useContext(uc);\n\n  //executes only once - on initial render =  componentDidMount\n\n  useEffect(() => {\n    document.title = \"Dashboard - eCommerce\";\n\n    //load data from database\n    (async () => {\n      let ordersResponse = await fetch(`http://localhost:5000/orders?userid=${ur.user.currentUserId}`, {\n        method: \"GET\"\n      });\n      if (ordersResponse.ok) {\n        //status code is 200\n        let ordersResponseBody = await ordersResponse.json();\n\n        //get all data from products\n        let productsResponse = await fetch(\"http://localhost:5000/products\", {\n          method: \"GET\"\n        });\n        if (productsResponse.ok) {\n          let productsResponseBody = await productsResponse.json();\n\n          //read all orders data\n          ordersResponseBody.forEach(order => {\n            order.product = productsResponseBody.find(prod => prod.id === order.productId);\n          });\n          console.log(ordersResponseBody);\n          setOrders(ordersResponseBody);\n        }\n      }\n    })();\n  }, [ur.user.currentUserId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 py-3 header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 5\n        }, this), \"DASHBOARD\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"py-2 my-2 text-info border-bottom border-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-history\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 1\n            }, this), \"PREVIOUS ORDERS\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge badge-info text-primary\",\n              children: getPreviousOrders(orders).length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"py-2  my-2 text-primary  border-bottom border-primary\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-shopping-cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 3\n            }, this), \"CART\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge badge-info text-primary\",\n              children: \"11\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 1\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"Q5Sm+H7VgfbabsGtmY70/Fx9+L8=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useContext","useEffect","useState","uc","Order","getPreviousOrders","orders","filter","ord","isPaymentCompleted","getCart","Dashboard","setOrders","ur","document","title","ordersResponse","fetch","user","currentUserId","method","ok","ordersResponseBody","json","productsResponse","productsResponseBody","forEach","order","product","find","prod","id","productId","console","log","length"],"sources":["E:/sahiltinku/appcode/e-commerce/src/Dashboard.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport { uc } from './Usercontext'\r\nimport Order from './Order'\r\n\r\n//  get previous order\r\nlet getPreviousOrders=(orders)=>{\r\n  return orders.filter((ord)=>{\r\n    return ord.isPaymentCompleted === true\r\n  })\r\n}\r\n// get cart \r\n \r\nlet getCart=(orders)=>{\r\n  return orders.filter((ord)=>{\r\n    return ord.isPaymentCompleted===false\r\n  })\r\n}\r\n\r\nfunction Dashboard() {\r\n\r\nconst [orders,setOrders]=useState([])\r\n\r\n// get context\r\nlet ur=useContext(uc)\r\n\r\n //executes only once - on initial render =  componentDidMount\r\n\r\n useEffect(() => {\r\n  document.title = \"Dashboard - eCommerce\";\r\n\r\n  //load data from database\r\n  (async () => {\r\n    let ordersResponse = await fetch(\r\n      `http://localhost:5000/orders?userid=${ur.user.currentUserId}`,\r\n      { method: \"GET\" }\r\n    );\r\n\r\n    if (ordersResponse.ok) {\r\n      //status code is 200\r\n      let ordersResponseBody = await ordersResponse.json();\r\n\r\n      //get all data from products\r\n      let productsResponse = await fetch(\"http://localhost:5000/products\", {\r\n        method: \"GET\",\r\n      });\r\n      if (productsResponse.ok) {\r\n        let productsResponseBody = await productsResponse.json();\r\n\r\n        //read all orders data\r\n        ordersResponseBody.forEach((order) => {\r\n          order.product = productsResponseBody.find(\r\n            (prod) => prod.id === order.productId\r\n          );\r\n        });\r\n\r\n        console.log(ordersResponseBody);\r\n\r\n        setOrders(ordersResponseBody);\r\n      }\r\n    }\r\n  })();\r\n}, [ur.user.currentUserId]);\r\n\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className=\"col-12 py-3 header\">\r\n<h4><i className=\"fa fa-dashboard\"></i>DASHBOARD</h4>\r\n      </div>\r\n    \r\n<div className=\"col-12\">\r\n  <div className=\"row\">\r\n    {/* pervious order start */}\r\n    <div className=\"col-lg-6\">\r\n      <h4 className='py-2 my-2 text-info border-bottom border-info'>\r\n<i className=\"fa fa-history\"></i>\r\nPREVIOUS ORDERS\r\n<span className=\"badge badge-info text-primary\">{getPreviousOrders(orders).length}</span>\r\n      </h4>\r\n    </div>\r\n{/* cart start */}\r\n<div className=\"col-lg-6\">\r\n  <h4 className=\"py-2  my-2 text-primary  border-bottom border-primary\">\r\n  <i className=\"fa fa-shopping-cart\"></i>\r\nCART\r\n<span className=\"badge badge-info text-primary\">11</span>\r\n\r\n  </h4>\r\n</div>\r\n{/* cart ends */}\r\n  </div>\r\n</div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}