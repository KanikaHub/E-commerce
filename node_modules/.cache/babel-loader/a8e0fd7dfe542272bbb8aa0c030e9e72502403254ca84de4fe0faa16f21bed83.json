{"ast":null,"code":"export const OrdersService = {\n  getPreviousOrders: orders => {\n    return orders.filter(ord => ord.isPaymentCompleted === true);\n  },\n  getCart: orders => {\n    return orders.filter(ord => ord.isPaymentCompleted === false);\n  }\n};\nexport const ProductsService = {\n  getProductByProductId: (products, productId) => {\n    return products.find(prod => prod.id === productId);\n  },\n  fetchProducts: () => {\n    return fetch(\"http://localhost:5500/products\", {\n      method: \"GET\"\n    });\n  }\n};\nexport const BrandsService = {\n  fetchBrands: () => {\n    return fetch(\"http://localhost:5500/brands\", {\n      method: \"GET\"\n    });\n  },\n  getBrandByBrandId: (brands, brandId) => {\n    return brands.find(brand => brand.id === brandId);\n  }\n};\nexport const CategoriesService = {\n  fetchCategories: () => {\n    return fetch(\"http://localhost:5500/categories\", {\n      method: \"GET\"\n    });\n  },\n  getCategoryByCategoryId: (categories, categoryId) => {\n    return categories.find(category => category.id === categoryId);\n  }\n};\nexport const SortService = {\n  getSortedArray: (elements, sortBy, sortOrder) => {\n    if (!elements) return elements;\n    let array = [...elements];\n    array.sort((a, b) => {\n      //a = cat\n      //b = dog\n      //c = 99\n      //d = 100\n      //return 99 - 100 = -1\n      //a comes first; and then b\n      //cat comes first; and then dog\n      if (a[sortBy] && b[sortBy]) return a[sortBy].toString().toLowerCase() - b[sortBy].toString().toLowerCase();else return 0;\n    });\n    if (sortOrder === \"DESC\") array.reverse();\n    return array;\n  }\n};","map":{"version":3,"names":["OrdersService","getPreviousOrders","orders","filter","ord","isPaymentCompleted","getCart","ProductsService","getProductByProductId","products","productId","find","prod","id","fetchProducts","fetch","method","BrandsService","fetchBrands","getBrandByBrandId","brands","brandId","brand","CategoriesService","fetchCategories","getCategoryByCategoryId","categories","categoryId","category","SortService","getSortedArray","elements","sortBy","sortOrder","array","sort","a","b","toString","toLowerCase","reverse"],"sources":["E:/twinkle/appcode/e-commerce/src/Service.js"],"sourcesContent":["export const OrdersService = {\r\n  getPreviousOrders: (orders) => {\r\n    return orders.filter((ord) => ord.isPaymentCompleted === true);\r\n  },\r\n  getCart: (orders) => {\r\n    return orders.filter((ord) => ord.isPaymentCompleted === false);\r\n  },\r\n};\r\n\r\nexport const ProductsService = {\r\n  getProductByProductId: (products, productId) => {\r\n    return products.find((prod) => prod.id === productId);\r\n  },\r\n  fetchProducts: () => {\r\n    return fetch(\"http://localhost:5500/products\", {\r\n      method: \"GET\",\r\n    });\r\n  },\r\n};\r\n\r\nexport const BrandsService = {\r\n  fetchBrands: () => {\r\n    return fetch(\"http://localhost:5500/brands\", {\r\n      method: \"GET\",\r\n    });\r\n  },\r\n  getBrandByBrandId: (brands, brandId) => {\r\n    return brands.find((brand) => brand.id === brandId);\r\n  },\r\n}\r\n\r\nexport const CategoriesService = {\r\n  fetchCategories: () => {\r\n    return fetch(\"http://localhost:5500/categories\", {\r\n      method: \"GET\",\r\n    });\r\n  },\r\n  getCategoryByCategoryId: (categories, categoryId) => {\r\n    return categories.find((category) => category.id === categoryId);\r\n  },\r\n}\r\n\r\nexport const SortService = {\r\n  getSortedArray: (elements, sortBy, sortOrder) => {\r\n    if (!elements) return elements;\r\n\r\n    let array = [...elements];\r\n\r\n    array.sort((a, b) => {\r\n      //a = cat\r\n      //b = dog\r\n      //c = 99\r\n      //d = 100\r\n      //return 99 - 100 = -1\r\n      //a comes first; and then b\r\n      //cat comes first; and then dog\r\n      if (a[sortBy] && b[sortBy])\r\n        return (\r\n          a[sortBy].toString().toLowerCase() -\r\n          b[sortBy].toString().toLowerCase()\r\n        );\r\n      else return 0;\r\n    });\r\n\r\n    if (sortOrder === \"DESC\") array.reverse();\r\n\r\n    return array;\r\n  },\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG;EAC3BC,iBAAiB,EAAGC,MAAM,IAAK;IAC7B,OAAOA,MAAM,CAACC,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACC,kBAAkB,KAAK,IAAI,CAAC;EAChE,CAAC;EACDC,OAAO,EAAGJ,MAAM,IAAK;IACnB,OAAOA,MAAM,CAACC,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACC,kBAAkB,KAAK,KAAK,CAAC;EACjE;AACF,CAAC;AAED,OAAO,MAAME,eAAe,GAAG;EAC7BC,qBAAqB,EAAE,CAACC,QAAQ,EAAEC,SAAS,KAAK;IAC9C,OAAOD,QAAQ,CAACE,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKH,SAAS,CAAC;EACvD,CAAC;EACDI,aAAa,EAAE,MAAM;IACnB,OAAOC,KAAK,CAAC,gCAAgC,EAAE;MAC7CC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG;EAC3BC,WAAW,EAAE,MAAM;IACjB,OAAOH,KAAK,CAAC,8BAA8B,EAAE;MAC3CC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;EACDG,iBAAiB,EAAE,CAACC,MAAM,EAAEC,OAAO,KAAK;IACtC,OAAOD,MAAM,CAACT,IAAI,CAAEW,KAAK,IAAKA,KAAK,CAACT,EAAE,KAAKQ,OAAO,CAAC;EACrD;AACF,CAAC;AAED,OAAO,MAAME,iBAAiB,GAAG;EAC/BC,eAAe,EAAE,MAAM;IACrB,OAAOT,KAAK,CAAC,kCAAkC,EAAE;MAC/CC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC;EACDS,uBAAuB,EAAE,CAACC,UAAU,EAAEC,UAAU,KAAK;IACnD,OAAOD,UAAU,CAACf,IAAI,CAAEiB,QAAQ,IAAKA,QAAQ,CAACf,EAAE,KAAKc,UAAU,CAAC;EAClE;AACF,CAAC;AAED,OAAO,MAAME,WAAW,GAAG;EACzBC,cAAc,EAAE,CAACC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,KAAK;IAC/C,IAAI,CAACF,QAAQ,EAAE,OAAOA,QAAQ;IAE9B,IAAIG,KAAK,GAAG,CAAC,GAAGH,QAAQ,CAAC;IAEzBG,KAAK,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MACnB;MACA;MACA;MACA;MACA;MACA;MACA;MACA,IAAID,CAAC,CAACJ,MAAM,CAAC,IAAIK,CAAC,CAACL,MAAM,CAAC,EACxB,OACEI,CAAC,CAACJ,MAAM,CAAC,CAACM,QAAQ,EAAE,CAACC,WAAW,EAAE,GAClCF,CAAC,CAACL,MAAM,CAAC,CAACM,QAAQ,EAAE,CAACC,WAAW,EAAE,CAClC,KACC,OAAO,CAAC;IACf,CAAC,CAAC;IAEF,IAAIN,SAAS,KAAK,MAAM,EAAEC,KAAK,CAACM,OAAO,EAAE;IAEzC,OAAON,KAAK;EACd;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}