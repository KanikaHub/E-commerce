{"ast":null,"code":"var _jsxFileName = \"E:\\\\twinkle\\\\appcode\\\\e-commerce\\\\src\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { uc } from \"./UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet Register = props => {\n  _s();\n  let ur = useContext(uc);\n  let [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n    fullName: \"\",\n    dateOfBirth: \"\",\n    gender: \"\",\n    country: \"\",\n    receiveNewsLetters: \"\"\n  });\n  let [countries] = useState([{\n    id: 1,\n    countryName: \"India\"\n  }, {\n    id: 2,\n    countryName: \"USA\"\n  }, {\n    id: 3,\n    countryName: \"UK\"\n  }, {\n    id: 4,\n    countryName: \"Japan\"\n  }, {\n    id: 5,\n    countryName: \"France\"\n  }, {\n    id: 6,\n    countryName: \"Brazil\"\n  }, {\n    id: 7,\n    countryName: \"Mexico\"\n  }, {\n    id: 8,\n    countryName: \"Canada\"\n  }]);\n  let [errors, setErrors] = useState({\n    email: [],\n    password: [],\n    fullName: [],\n    dateOfBirth: [],\n    gender: [],\n    country: [],\n    receiveNewsLetters: []\n  });\n  let [dirty, setDirty] = useState({\n    email: false,\n    password: false,\n    fullName: false,\n    dateOfBirth: false,\n    gender: false,\n    country: false,\n    receiveNewsLetters: false\n  });\n  let [message, setMessage] = useState(\"\");\n\n  //validate\n  let validate = () => {\n    let errorsData = {};\n\n    //email\n    errorsData.email = [];\n\n    //email can't blank\n    if (!state.email) {\n      errorsData.email.push(\"Email can't be blank\");\n    }\n\n    //email regex\n    const validEmailRegex = /\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\n    if (state.email) {\n      if (!validEmailRegex.test(state.email)) {\n        errorsData.email.push(\"Proper email address is expected\");\n      }\n    }\n\n    //password\n    errorsData.password = [];\n\n    //password can't blank\n    if (!state.password) {\n      errorsData.password.push(\"Password can't be blank\");\n    }\n\n    //email regex\n    const validPasswordRegex = /((?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,15})/;\n    if (state.password) {\n      if (!validPasswordRegex.test(state.password)) {\n        errorsData.password.push(\"Password should be 6 to 15 characters long with at least one uppercase letter, one lowercase letter and one digit\");\n      }\n    }\n\n    //fullName\n    errorsData.fullName = [];\n\n    //fullName can't blank\n    if (!state.fullName) {\n      errorsData.fullName.push(\"Full Name can't be blank\");\n    }\n\n    //dateOfBirth\n    errorsData.dateOfBirth = [];\n\n    //dateOfBirth can't blank\n    if (!state.dateOfBirth) {\n      errorsData.dateOfBirth.push(\"Date of Birth can't be blank\");\n    }\n\n    //gender\n    errorsData.gender = [];\n\n    //gender can't blank\n    if (!state.gender) {\n      errorsData.gender.push(\"Please select gender either male or female\");\n    }\n\n    //country\n    errorsData.country = [];\n\n    //country can't blank\n    if (!state.country) {\n      errorsData.country.push(\"Please select a country\");\n    }\n    errorsData.receiveNewsLetters = [];\n    setErrors(errorsData);\n  };\n  useEffect(validate, [state]);\n\n  //executes only once - on initial render =  componentDidMount\n  useEffect(() => {\n    document.title = \"Register - eCommerce\";\n  }, []);\n\n  //executes when the user clicks on Register button\n  let onRegisterClick = async () => {\n    //set all controls as dirty\n    let dirtyData = dirty;\n    Object.keys(dirty).forEach(control => {\n      dirtyData[control] = true;\n    });\n    setDirty(dirtyData);\n    validate();\n    if (isValid()) {\n      let response = await fetch(\"http://localhost:5500/users\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: state.email,\n          password: state.password,\n          fullName: state.fullName,\n          dateOfBirth: state.dateOfBirth,\n          gender: state.gender,\n          country: state.country,\n          receiveNewsLetters: state.receiveNewsLetters\n        }),\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      });\n      if (response.ok) {\n        let responseBody = await response.json();\n        ur.setUser({\n          ...uc.user,\n          isLoggedIn: true,\n          currentUserName: responseBody.fullName,\n          currentUserId: responseBody.id\n        });\n        setMessage( /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-success\",\n          children: \"Successfully Registered\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this));\n      } else {\n        setMessage( /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-danger\",\n          children: \"Errors in database connection\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this));\n      }\n    } else {\n      setMessage( /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-danger\",\n        children: \"Errors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 18\n      }, this));\n    }\n  };\n  let isValid = () => {\n    let valid = true;\n\n    //reading all controls from 'errors' state\n    for (let control in errors) {\n      if (errors[control].length > 0) {\n        valid = false;\n      }\n    }\n    return valid;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-lg-6 col-md-7 mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card border-primary shadow my-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header border-bottom border-primary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              fontSize: \"40px\"\n            },\n            className: \"text-primary text-center\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"text-danger\",\n            children: Object.keys(errors).map(control => {\n              if (dirty[control]) {\n                return errors[control].map(err => {\n                  return /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: err\n                  }, err, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 28\n                  }, this);\n                });\n              } else {\n                return \"\";\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body border-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-lg-4\",\n              htmlFor: \"email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                name: \"email\",\n                id: \"email\",\n                value: state.email,\n                onChange: event => {\n                  setState({\n                    ...state,\n                    [event.target.name]: event.target.value\n                  });\n                },\n                onBlur: event => {\n                  setDirty({\n                    ...dirty,\n                    [event.target.name]: true\n                  });\n                  validate();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-danger\",\n                children: dirty[\"email\"] && errors[\"email\"][0] ? errors[\"email\"] : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-lg-4\",\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                className: \"form-control\",\n                name: \"password\",\n                id: \"password\",\n                value: state.password,\n                onChange: event => {\n                  setState({\n                    ...state,\n                    [event.target.name]: event.target.value\n                  });\n                },\n                onBlur: event => {\n                  setDirty({\n                    ...dirty,\n                    [event.target.name]: true\n                  });\n                  validate();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-danger\",\n                children: dirty[\"password\"] && errors[\"password\"][0] ? errors[\"password\"] : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-lg-4\",\n              htmlFor: \"fullName\",\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                name: \"fullName\",\n                id: \"fullName\",\n                value: state.fullName,\n                onChange: event => {\n                  setState({\n                    ...state,\n                    [event.target.name]: event.target.value\n                  });\n                },\n                onBlur: event => {\n                  setDirty({\n                    ...dirty,\n                    [event.target.name]: true\n                  });\n                  validate();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-danger\",\n                children: dirty[\"fullName\"] && errors[\"fullName\"][0] ? errors[\"fullName\"] : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-lg-4\",\n              htmlFor: \"dateOfBirth\",\n              children: \"Date of Birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"date\",\n                className: \"form-control\",\n                name: \"dateOfBirth\",\n                id: \"dateOfBirth\",\n                value: state.dateOfBirth,\n                onChange: event => {\n                  setState({\n                    ...state,\n                    [event.target.name]: event.target.value\n                  });\n                },\n                onBlur: event => {\n                  setDirty({\n                    ...dirty,\n                    [event.target.name]: true\n                  });\n                  validate();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-danger\",\n                children: dirty[\"dateOfBirth\"] && errors[\"dateOfBirth\"][0] ? errors[\"dateOfBirth\"] : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-lg-4\",\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"gender\",\n                  value: \"male\",\n                  id: \"male\",\n                  className: \"form-check-input\",\n                  checked: state.gender === \"male\" ? true : false,\n                  onChange: event => {\n                    setState({\n                      ...state,\n                      [event.target.name]: event.target.value\n                    });\n                  },\n                  onBlur: event => {\n                    setDirty({\n                      ...dirty,\n                      [event.target.name]: true\n                    });\n                    validate();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-inline\",\n                  htmlFor: \"male\",\n                  children: \"Male\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"radio\",\n                  name: \"gender\",\n                  value: \"female\",\n                  id: \"female\",\n                  className: \"form-check-input\",\n                  checked: state.gender === \"female\" ? true : false,\n                  onChange: event => {\n                    setState({\n                      ...state,\n                      [event.target.name]: event.target.value\n                    });\n                  },\n                  onBlur: event => {\n                    setDirty({\n                      ...dirty,\n                      [event.target.name]: true\n                    });\n                    validate();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-inline\",\n                  htmlFor: \"female\",\n                  children: \"Female\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-danger\",\n                children: dirty[\"gender\"] && errors[\"gender\"][0] ? errors[\"gender\"] : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-lg-4\",\n              htmlFor: \"country\",\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control\",\n                name: \"country\",\n                id: \"country\",\n                value: state.country,\n                onChange: event => {\n                  setState({\n                    ...state,\n                    [event.target.name]: event.target.value\n                  });\n                },\n                onBlur: event => {\n                  setDirty({\n                    ...dirty,\n                    [event.target.name]: true\n                  });\n                  validate();\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Please Select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 19\n                }, this), countries.map(country => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: country.id,\n                  children: country.countryName\n                }, country.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 423,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-danger\",\n                children: dirty[\"country\"] && errors[\"country\"][0] ? errors[\"country\"] : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group form-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"col-lg-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-lg-8\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-check\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  name: \"receiveNewsLetters\",\n                  value: \"true\",\n                  id: \"receiveNewsLetters\",\n                  className: \"form-check-input\",\n                  checked: state.receiveNewsLetters === true ? true : false,\n                  onChange: event => {\n                    setState({\n                      ...state,\n                      [event.target.name]: event.target.checked\n                    });\n                  },\n                  onBlur: event => {\n                    setDirty({\n                      ...dirty,\n                      [event.target.name]: true\n                    });\n                    validate();\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 461,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"form-check-inline\",\n                  htmlFor: \"receiveNewsLetters\",\n                  children: \"Receive News Letters\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 460,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-danger\",\n                children: dirty[\"receiveNewsLetters\"] && errors[\"receiveNewsLetters\"][0] ? errors[\"receiveNewsLetters\"] : \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-footer text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-1\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary m-2\",\n              onClick: onRegisterClick,\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"uf3YAmEAXddxeNibQsH50SkzujM=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","useContext","uc","Register","props","ur","state","setState","email","password","fullName","dateOfBirth","gender","country","receiveNewsLetters","countries","id","countryName","errors","setErrors","dirty","setDirty","message","setMessage","validate","errorsData","push","validEmailRegex","test","validPasswordRegex","document","title","onRegisterClick","dirtyData","Object","keys","forEach","control","isValid","response","fetch","method","body","JSON","stringify","headers","ok","responseBody","json","setUser","user","isLoggedIn","currentUserName","currentUserId","valid","length","fontSize","map","err","event","target","name","value","checked"],"sources":["E:/twinkle/appcode/e-commerce/src/Register.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { uc } from \"./UserContext\";\r\n\r\nlet Register = (props) => {\r\n  let ur = useContext(uc)\r\n  let [state, setState] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    fullName: \"\",\r\n    dateOfBirth: \"\",\r\n    gender: \"\",\r\n    country: \"\",\r\n    receiveNewsLetters: \"\",\r\n  });\r\n\r\n  let [countries] = useState([\r\n    { id: 1, countryName: \"India\" },\r\n    { id: 2, countryName: \"USA\" },\r\n    { id: 3, countryName: \"UK\" },\r\n    { id: 4, countryName: \"Japan\" },\r\n    { id: 5, countryName: \"France\" },\r\n    { id: 6, countryName: \"Brazil\" },\r\n    { id: 7, countryName: \"Mexico\" },\r\n    { id: 8, countryName: \"Canada\" },\r\n  ]);\r\n\r\n  let [errors, setErrors] = useState({\r\n    email: [],\r\n    password: [],\r\n    fullName: [],\r\n    dateOfBirth: [],\r\n    gender: [],\r\n    country: [],\r\n    receiveNewsLetters: [],\r\n  });\r\n\r\n  let [dirty, setDirty] = useState({\r\n    email: false,\r\n    password: false,\r\n    fullName: false,\r\n    dateOfBirth: false,\r\n    gender: false,\r\n    country: false,\r\n    receiveNewsLetters: false,\r\n  });\r\n\r\n  let [message, setMessage] = useState(\"\");\r\n\r\n\r\n\r\n  //validate\r\n  let validate = () => {\r\n    let errorsData = {};\r\n\r\n    //email\r\n    errorsData.email = [];\r\n\r\n    //email can't blank\r\n    if (!state.email) {\r\n      errorsData.email.push(\"Email can't be blank\");\r\n    }\r\n\r\n    //email regex\r\n    const validEmailRegex = /\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\r\n    if (state.email) {\r\n      if (!validEmailRegex.test(state.email)) {\r\n        errorsData.email.push(\"Proper email address is expected\");\r\n      }\r\n    }\r\n\r\n    //password\r\n    errorsData.password = [];\r\n\r\n    //password can't blank\r\n    if (!state.password) {\r\n      errorsData.password.push(\"Password can't be blank\");\r\n    }\r\n\r\n    //email regex\r\n    const validPasswordRegex = /((?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,15})/;\r\n    if (state.password) {\r\n      if (!validPasswordRegex.test(state.password)) {\r\n        errorsData.password.push(\r\n          \"Password should be 6 to 15 characters long with at least one uppercase letter, one lowercase letter and one digit\"\r\n        );\r\n      }\r\n    }\r\n\r\n    //fullName\r\n    errorsData.fullName = [];\r\n\r\n    //fullName can't blank\r\n    if (!state.fullName) {\r\n      errorsData.fullName.push(\"Full Name can't be blank\");\r\n    }\r\n\r\n    //dateOfBirth\r\n    errorsData.dateOfBirth = [];\r\n\r\n    //dateOfBirth can't blank\r\n    if (!state.dateOfBirth) {\r\n      errorsData.dateOfBirth.push(\"Date of Birth can't be blank\");\r\n    }\r\n\r\n    //gender\r\n    errorsData.gender = [];\r\n\r\n    //gender can't blank\r\n    if (!state.gender) {\r\n      errorsData.gender.push(\"Please select gender either male or female\");\r\n    }\r\n\r\n    //country\r\n    errorsData.country = [];\r\n\r\n    //country can't blank\r\n    if (!state.country) {\r\n      errorsData.country.push(\"Please select a country\");\r\n    }\r\n\r\n    errorsData.receiveNewsLetters = [];\r\n    setErrors(errorsData);\r\n  };\r\n\r\n  useEffect(validate, [state]);\r\n\r\n  //executes only once - on initial render =  componentDidMount\r\n  useEffect(() => {\r\n    document.title = \"Register - eCommerce\";\r\n  }, []);\r\n\r\n  //executes when the user clicks on Register button\r\n  let onRegisterClick = async () => {\r\n    //set all controls as dirty\r\n    let dirtyData = dirty;\r\n    Object.keys(dirty).forEach((control) => {\r\n      dirtyData[control] = true;\r\n    });\r\n    setDirty(dirtyData);\r\n\r\n    validate();\r\n\r\n    if (isValid()) {\r\n      let response = await fetch(\"http://localhost:5500/users\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          email: state.email,\r\n          password: state.password,\r\n          fullName: state.fullName,\r\n          dateOfBirth: state.dateOfBirth,\r\n          gender: state.gender,\r\n          country: state.country,\r\n          receiveNewsLetters: state.receiveNewsLetters,\r\n        }),\r\n        headers: {\r\n          \"Content-type\": \"application/json\",\r\n        },\r\n      });\r\n\r\n      if (response.ok) {\r\n        let responseBody = await response.json();\r\n\r\n      ur.setUser({\r\n        ...uc.user, isLoggedIn: true,\r\n        currentUserName: responseBody.fullName,\r\n        currentUserId: responseBody.id,\r\n        \r\n      })\r\n\r\n        setMessage(\r\n          <span className=\"text-success\">Successfully Registered</span>\r\n        );\r\n\r\n      \r\n      } else {\r\n        setMessage(\r\n          <span className=\"text-danger\">Errors in database connection</span>\r\n        );\r\n      }\r\n    } else {\r\n      setMessage(<span className=\"text-danger\">Errors</span>);\r\n    }\r\n  };\r\n\r\n  let isValid = () => {\r\n    let valid = true;\r\n\r\n    //reading all controls from 'errors' state\r\n    for (let control in errors) {\r\n      if (errors[control].length > 0) {\r\n        valid = false;\r\n      }\r\n    }\r\n\r\n    return valid;\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-lg-6 col-md-7 mx-auto\">\r\n        <div className=\"card border-primary shadow my-2\">\r\n          <div className=\"card-header border-bottom border-primary\">\r\n            <h4\r\n              style={{ fontSize: \"40px\" }}\r\n              className=\"text-primary text-center\"\r\n            >\r\n              Register\r\n            </h4>\r\n\r\n            <ul className=\"text-danger\">\r\n              {Object.keys(errors).map((control) => {\r\n                if (dirty[control]) {\r\n                  return errors[control].map((err) => {\r\n                    return <li key={err}>{err}</li>;\r\n                  });\r\n                } else {\r\n                  return \"\";\r\n                }\r\n              })}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"card-body border-bottom\">\r\n            {/* email starts */}\r\n            <div className=\"form-group form-row\">\r\n              <label className=\"col-lg-4\" htmlFor=\"email\">\r\n                Email\r\n              </label>\r\n              <div className=\"col-lg-8\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"email\"\r\n                  id=\"email\"\r\n                  value={state.email}\r\n                  onChange={(event) => {\r\n                    setState({\r\n                      ...state,\r\n                      [event.target.name]: event.target.value,\r\n                    });\r\n                  }}\r\n                  onBlur={(event) => {\r\n                    setDirty({ ...dirty, [event.target.name]: true });\r\n                    validate();\r\n                  }}\r\n                />\r\n\r\n                <div className=\"text-danger\">\r\n                  {dirty[\"email\"] && errors[\"email\"][0] ? errors[\"email\"] : \"\"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* email ends */}\r\n\r\n            {/* password starts */}\r\n            <div className=\"form-group form-row\">\r\n              <label className=\"col-lg-4\" htmlFor=\"password\">\r\n                Password\r\n              </label>\r\n              <div className=\"col-lg-8\">\r\n                <input\r\n                  type=\"password\"\r\n                  className=\"form-control\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  value={state.password}\r\n                  onChange={(event) => {\r\n                    setState({\r\n                      ...state,\r\n                      [event.target.name]: event.target.value,\r\n                    });\r\n                  }}\r\n                  onBlur={(event) => {\r\n                    setDirty({ ...dirty, [event.target.name]: true });\r\n                    validate();\r\n                  }}\r\n                />\r\n\r\n                <div className=\"text-danger\">\r\n                  {dirty[\"password\"] && errors[\"password\"][0]\r\n                    ? errors[\"password\"]\r\n                    : \"\"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* password ends */}\r\n\r\n            {/* fullName starts */}\r\n            <div className=\"form-group form-row\">\r\n              <label className=\"col-lg-4\" htmlFor=\"fullName\">\r\n                Full Name\r\n              </label>\r\n              <div className=\"col-lg-8\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"fullName\"\r\n                  id=\"fullName\"\r\n                  value={state.fullName}\r\n                  onChange={(event) => {\r\n                    setState({\r\n                      ...state,\r\n                      [event.target.name]: event.target.value,\r\n                    });\r\n                  }}\r\n                  onBlur={(event) => {\r\n                    setDirty({ ...dirty, [event.target.name]: true });\r\n                    validate();\r\n                  }}\r\n                />\r\n\r\n                <div className=\"text-danger\">\r\n                  {dirty[\"fullName\"] && errors[\"fullName\"][0]\r\n                    ? errors[\"fullName\"]\r\n                    : \"\"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* fullName ends */}\r\n\r\n            {/* dateOfBirth starts */}\r\n            <div className=\"form-group form-row\">\r\n              <label className=\"col-lg-4\" htmlFor=\"dateOfBirth\">\r\n                Date of Birth\r\n              </label>\r\n              <div className=\"col-lg-8\">\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  name=\"dateOfBirth\"\r\n                  id=\"dateOfBirth\"\r\n                  value={state.dateOfBirth}\r\n                  onChange={(event) => {\r\n                    setState({\r\n                      ...state,\r\n                      [event.target.name]: event.target.value,\r\n                    });\r\n                  }}\r\n                  onBlur={(event) => {\r\n                    setDirty({ ...dirty, [event.target.name]: true });\r\n                    validate();\r\n                  }}\r\n                />\r\n\r\n                <div className=\"text-danger\">\r\n                  {dirty[\"dateOfBirth\"] && errors[\"dateOfBirth\"][0]\r\n                    ? errors[\"dateOfBirth\"]\r\n                    : \"\"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* dateOfBirth ends */}\r\n\r\n            {/* gender starts */}\r\n            <div className=\"form-group form-row\">\r\n              <label className=\"col-lg-4\">Gender</label>\r\n              <div className=\"col-lg-8\">\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"gender\"\r\n                    value=\"male\"\r\n                    id=\"male\"\r\n                    className=\"form-check-input\"\r\n                    checked={state.gender === \"male\" ? true : false}\r\n                    onChange={(event) => {\r\n                      setState({\r\n                        ...state,\r\n                        [event.target.name]: event.target.value,\r\n                      });\r\n                    }}\r\n                    onBlur={(event) => {\r\n                      setDirty({ ...dirty, [event.target.name]: true });\r\n                      validate();\r\n                    }}\r\n                  />\r\n\r\n                  <label className=\"form-check-inline\" htmlFor=\"male\">\r\n                    Male\r\n                  </label>\r\n                </div>\r\n\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"gender\"\r\n                    value=\"female\"\r\n                    id=\"female\"\r\n                    className=\"form-check-input\"\r\n                    checked={state.gender === \"female\" ? true : false}\r\n                    onChange={(event) => {\r\n                      setState({\r\n                        ...state,\r\n                        [event.target.name]: event.target.value,\r\n                      });\r\n                    }}\r\n                    onBlur={(event) => {\r\n                      setDirty({ ...dirty, [event.target.name]: true });\r\n                      validate();\r\n                    }}\r\n                  />\r\n\r\n                  <label className=\"form-check-inline\" htmlFor=\"female\">\r\n                    Female\r\n                  </label>\r\n                </div>\r\n\r\n                <div className=\"text-danger\">\r\n                  {dirty[\"gender\"] && errors[\"gender\"][0]\r\n                    ? errors[\"gender\"]\r\n                    : \"\"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* gender ends */}\r\n\r\n            {/* country starts */}\r\n            <div className=\"form-group form-row\">\r\n              <label className=\"col-lg-4\" htmlFor=\"country\">\r\n                Country\r\n              </label>\r\n              <div className=\"col-lg-8\">\r\n                <select\r\n                  className=\"form-control\"\r\n                  name=\"country\"\r\n                  id=\"country\"\r\n                  value={state.country}\r\n                  onChange={(event) => {\r\n                    setState({\r\n                      ...state,\r\n                      [event.target.name]: event.target.value,\r\n                    });\r\n                  }}\r\n                  onBlur={(event) => {\r\n                    setDirty({ ...dirty, [event.target.name]: true });\r\n                    validate();\r\n                  }}\r\n                >\r\n                  <option value=\"\">Please Select</option>\r\n                  {countries.map((country) => (\r\n                    <option key={country.id} value={country.id}>\r\n                      {country.countryName}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n\r\n                <div className=\"text-danger\">\r\n                  {dirty[\"country\"] && errors[\"country\"][0]\r\n                    ? errors[\"country\"]\r\n                    : \"\"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* country ends */}\r\n\r\n            {/* receiveNewsLetters starts */}\r\n            <div className=\"form-group form-row\">\r\n              <label className=\"col-lg-4\"></label>\r\n              <div className=\"col-lg-8\">\r\n                <div className=\"form-check\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    name=\"receiveNewsLetters\"\r\n                    value=\"true\"\r\n                    id=\"receiveNewsLetters\"\r\n                    className=\"form-check-input\"\r\n                    checked={state.receiveNewsLetters === true ? true : false}\r\n                    onChange={(event) => {\r\n                      setState({\r\n                        ...state,\r\n                        [event.target.name]: event.target.checked,\r\n                      });\r\n                    }}\r\n                    onBlur={(event) => {\r\n                      setDirty({ ...dirty, [event.target.name]: true });\r\n                      validate();\r\n                    }}\r\n                  />\r\n\r\n                  <label\r\n                    className=\"form-check-inline\"\r\n                    htmlFor=\"receiveNewsLetters\"\r\n                  >\r\n                    Receive News Letters\r\n                  </label>\r\n                </div>\r\n\r\n                <div className=\"text-danger\">\r\n                  {dirty[\"receiveNewsLetters\"] &&\r\n                  errors[\"receiveNewsLetters\"][0]\r\n                    ? errors[\"receiveNewsLetters\"]\r\n                    : \"\"}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* receiveNewsLetters ends */}\r\n          </div>\r\n\r\n          {/* footer starts */}\r\n          <div className=\"card-footer text-center\">\r\n            <div className=\"m-1\">{message}</div>\r\n            <div>\r\n              <button className=\"btn btn-primary m-2\" onClick={onRegisterClick}>\r\n                Register\r\n              </button>\r\n            </div>\r\n          </div>\r\n          {/* footer ends */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}