{"ast":null,"code":"var _jsxFileName = \"E:\\\\sahiltinku\\\\appcode\\\\e-commerce\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useContext, useState } from \"react\";\nimport { UserContext } from \"./UserContext\";\nimport Order from \"./Order\";\n\n//getPreviousOrders\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet getPreviousOrders = orders => {\n  return orders.filter(ord => ord.isPaymentCompleted === true);\n};\n\n//getCart\nlet getCart = orders => {\n  return orders.filter(ord => ord.isPaymentCompleted === false);\n};\nfunction Dashboard() {\n  _s();\n  let [orders, setOrders] = useState([]);\n\n  //get context\n  let userContext = useContext(UserContext);\n\n  //executes only once - on initial render =  componentDidMount\n  useEffect(() => {\n    document.title = \"Dashboard - eCommerce\";\n\n    //load data from database\n    (async () => {\n      let ordersResponse = await fetch(`http://localhost:5000/orders?userid=${ur.user.currentUserId}`, {\n        method: \"GET\"\n      });\n      if (ordersResponse.ok) {\n        //status code is 200\n        let ordersResponseBody = await ordersResponse.json();\n\n        //get all data from products\n        let productsResponse = await fetch(\"http://localhost:5000/products\", {\n          method: \"GET\"\n        });\n        if (productsResponse.ok) {\n          let productsResponseBody = await productsResponse.json();\n\n          //read all orders data\n          ordersResponseBody.forEach(order => {\n            order.product = productsResponseBody.find(prod => prod.id === order.productId);\n          });\n          console.log(ordersResponseBody);\n          setOrders(ordersResponseBody);\n        }\n      }\n    })();\n  }, [u.user.currentUserId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12 py-3 header\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), \" Dashboard\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-12\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"py-2 my-2 text-info border-bottom border-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-history\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), \" Previous Orders\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge badge-info\",\n              children: getPreviousOrders(orders).length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), getPreviousOrders(orders).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger\",\n            children: \"No Orders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this) : \"\", getPreviousOrders(orders).map(ord => {\n            return /*#__PURE__*/_jsxDEV(Order, {\n              orderId: ord.id,\n              productId: ord.productId,\n              userId: ord.userId,\n              isPaymentCompleted: ord.isPaymentCompleted,\n              quantity: ord.quantity,\n              productName: ord.product.productName,\n              price: ord.product.price\n            }, ord.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"py-2 my-2 text-primary border-bottom border-primary\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-shopping-cart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this), \" Cart\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge badge-primary\",\n              children: getCart(orders).length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), getCart(orders).length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-danger\",\n            children: \"No products in your cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this) : \"\", getCart(orders).map(ord => {\n            return /*#__PURE__*/_jsxDEV(Order, {\n              orderId: ord.id,\n              productId: ord.productId,\n              userId: ord.userId,\n              isPaymentCompleted: ord.isPaymentCompleted,\n              quantity: ord.quantity,\n              productName: ord.product.productName,\n              price: ord.product.price\n            }, ord.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"EBiZD1e9C4Qsy9PSmhQ4/iKrcsY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useContext","useState","UserContext","Order","getPreviousOrders","orders","filter","ord","isPaymentCompleted","getCart","Dashboard","setOrders","userContext","document","title","ordersResponse","fetch","ur","user","currentUserId","method","ok","ordersResponseBody","json","productsResponse","productsResponseBody","forEach","order","product","find","prod","id","productId","console","log","u","length","map","userId","quantity","productName","price"],"sources":["E:/sahiltinku/appcode/e-commerce/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useContext, useState } from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\nimport Order from \"./Order\";\r\n\r\n//getPreviousOrders\r\nlet getPreviousOrders = (orders) => {\r\n  return orders.filter((ord) => ord.isPaymentCompleted === true);\r\n};\r\n\r\n//getCart\r\nlet getCart = (orders) => {\r\n  return orders.filter((ord) => ord.isPaymentCompleted === false);\r\n};\r\n\r\nfunction Dashboard() {\r\n  let [orders, setOrders] = useState([]);\r\n\r\n  //get context\r\n  let userContext = useContext(UserContext);\r\n\r\n  //executes only once - on initial render =  componentDidMount\r\n  useEffect(() => {\r\n    document.title = \"Dashboard - eCommerce\";\r\n\r\n    //load data from database\r\n    (async () => {\r\n      let ordersResponse = await fetch(\r\n        `http://localhost:5000/orders?userid=${ur.user.currentUserId}`,\r\n        { method: \"GET\" }\r\n      );\r\n\r\n      if (ordersResponse.ok) {\r\n        //status code is 200\r\n        let ordersResponseBody = await ordersResponse.json();\r\n\r\n        //get all data from products\r\n        let productsResponse = await fetch(\"http://localhost:5000/products\", {\r\n          method: \"GET\",\r\n        });\r\n        if (productsResponse.ok) {\r\n          let productsResponseBody = await productsResponse.json();\r\n\r\n          //read all orders data\r\n          ordersResponseBody.forEach((order) => {\r\n            order.product = productsResponseBody.find(\r\n              (prod) => prod.id === order.productId\r\n            );\r\n          });\r\n\r\n          console.log(ordersResponseBody);\r\n\r\n          setOrders(ordersResponseBody);\r\n        }\r\n      }\r\n    })();\r\n  }, [u.user.currentUserId]);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-12 py-3 header\">\r\n        <h4>\r\n          <i className=\"fa fa-dashboard\"></i> Dashboard\r\n        </h4>\r\n      </div>\r\n\r\n      <div className=\"col-12\">\r\n        <div className=\"row\">\r\n          {/* previous orders starts*/}\r\n          <div className=\"col-lg-6\">\r\n            <h4 className=\"py-2 my-2 text-info border-bottom border-info\">\r\n              <i className=\"fa fa-history\"></i> Previous Orders{\" \"}\r\n              <span className=\"badge badge-info\">\r\n                {getPreviousOrders(orders).length}\r\n              </span>\r\n            </h4>\r\n\r\n            {getPreviousOrders(orders).length === 0 ? (\r\n              <div className=\"text-danger\">No Orders</div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            {getPreviousOrders(orders).map((ord) => {\r\n              return (\r\n                <Order\r\n                  key={ord.id}\r\n                  orderId={ord.id}\r\n                  productId={ord.productId}\r\n                  userId={ord.userId}\r\n                  isPaymentCompleted={ord.isPaymentCompleted}\r\n                  quantity={ord.quantity}\r\n                  productName={ord.product.productName}\r\n                  price={ord.product.price}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          {/* previous orders ends*/}\r\n\r\n          {/* cart starts*/}\r\n          <div className=\"col-lg-6\">\r\n            <h4 className=\"py-2 my-2 text-primary border-bottom border-primary\">\r\n              <i className=\"fa fa-shopping-cart\"></i> Cart{\" \"}\r\n              <span className=\"badge badge-primary\">\r\n                {getCart(orders).length}\r\n              </span>\r\n            </h4>\r\n\r\n            {getCart(orders).length === 0 ? (\r\n              <div className=\"text-danger\">No products in your cart</div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n            {getCart(orders).map((ord) => {\r\n              return (\r\n                <Order\r\n                  key={ord.id}\r\n                  orderId={ord.id}\r\n                  productId={ord.productId}\r\n                  userId={ord.userId}\r\n                  isPaymentCompleted={ord.isPaymentCompleted}\r\n                  quantity={ord.quantity}\r\n                  productName={ord.product.productName}\r\n                  price={ord.product.price}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          {/* cart ends*/}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}