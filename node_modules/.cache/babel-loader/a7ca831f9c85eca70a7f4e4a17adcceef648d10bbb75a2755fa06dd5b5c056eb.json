{"ast":null,"code":"var _jsxFileName = \"E:\\\\sahiltinku\\\\appcode\\\\e-commerce\\\\src\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { uc } from \"./UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  let ur = usecontext(uc);\n  const nav = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setpassword] = useState(\"\");\n  let [dirty, setdirty] = useState({\n    email: false,\n    password: false\n  });\n  let [errors, seterrors] = useState({\n    email: [],\n    password: []\n  });\n  let [loginMsg, setloginMsg] = useState(\"\");\n  useEffect(() => {\n    document.title = \"Login-ECommerce\";\n  }, []);\n  useEffect(() => {\n    //email validation\n    if (email.indexOf(\"@\") > 0) {\n      console.log(\"valid\");\n    } else {\n      console.log(\"Invalid\");\n    }\n  }, [email]);\n  const validate = () => {\n    let errorData = {};\n    // email\n\n    errorData.email = [];\n    if (!email) {\n      errorData.email.push(\"email cant be blank\");\n    }\n    const validEmailRegex = /\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\n    if (email) {\n      if (!validEmailRegex.test(email)) {\n        errorData.email.push(\"Proper email address is expected\");\n      }\n    }\n    //password\n    errorData.password = [];\n    //password cant be blank\n\n    if (!password) {\n      errorData.password.push(\"password cant be blank\");\n    }\n    //password regex\n\n    const validpasswordRegex = /((?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,15})/;\n    if (password) {\n      if (!validpasswordRegex.test(password)) {\n        errorData.password.push(\"Proper password is expected\");\n      }\n    }\n  };\n  useEffect(validate, [email, password]);\n  let onLoginClick = async () => {\n    //set all controls as dirty \n    let dirtyData = dirty;\n    Object.keys(dirty).forEach(control => {\n      dirtyData[control] = true;\n    });\n    setdirty(dirtyData);\n\n    //call validate \n    validate();\n    if (isValid()) {\n      let response = await fetch(`http://localhost:5000/users?email=${email}&password=${password}`, {\n        method: \"GET\"\n      });\n      if (response.ok) {\n        //Status code is 200 \n        let responseBody = await response.json();\n        if (responseBody.length > 0) {\n          // props.history.replace(\"/dashboard\");\n          ur.setuser({\n            ...ur.user,\n            isLoggedIn: true,\n            currentUserName: responseBody[0].fullname\n          });\n          nav('/dashboard');\n        } else {\n          setloginMsg( /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: \"Invalid Login, please try again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this));\n        }\n      } else {\n        setloginMsg( /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-danger\",\n          children: \"Unable to connect to server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this));\n      }\n    }\n  };\n  let isValid = () => {\n    let valid = true;\n\n    //reading all controls from errors \n    for (let control in errors) {\n      if (errors[control].length > 0) valid = false;\n    }\n    return valid;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-lg-5 col-md-7 mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card border-success shadow-lg my-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header border-bottom border-success\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-success text-center\",\n            children: \"Login Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body border-bottom border-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"E-MAIL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: email,\n              onChange: e => {\n                setEmail(e.target.value);\n              },\n              id: \"email\",\n              placeholder: \"E-mail\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: password,\n              id: \"password\",\n              onChange: e => {\n                setpassword(e.target.value);\n              },\n              placeholder: \"Password\",\n              className: \"form-control\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-footer text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"m-1\",\n              children: loginMsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: onLoginClick,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 16\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"byN4+wQBGmEMeZv2pDPbHXe5HX4=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","uc","Login","ur","usecontext","nav","email","setEmail","password","setpassword","dirty","setdirty","errors","seterrors","loginMsg","setloginMsg","document","title","indexOf","console","log","validate","errorData","push","validEmailRegex","test","validpasswordRegex","onLoginClick","dirtyData","Object","keys","forEach","control","isValid","response","fetch","method","ok","responseBody","json","length","setuser","user","isLoggedIn","currentUserName","fullname","valid","e","target","value"],"sources":["E:/sahiltinku/appcode/e-commerce/src/Login.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { uc } from \"./UserContext\";\r\nconst Login = () => {\r\nlet ur = usecontext(uc)\r\n  const nav = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setpassword] = useState(\"\");\r\n  let [dirty, setdirty] = useState({\r\n    email: false,\r\n    password: false,\r\n  });\r\n\r\n  let [errors, seterrors] = useState({\r\n    email: [],\r\n    password: [],\r\n  });\r\n\r\n  let [loginMsg, setloginMsg] = useState(\"\");\r\n  useEffect(() => {\r\n    document.title = \"Login-ECommerce\";\r\n  }, []);\r\n  useEffect(() => {\r\n    //email validation\r\n    if (email.indexOf(\"@\") > 0) {\r\n      console.log(\"valid\");\r\n    } else {\r\n      console.log(\"Invalid\");\r\n    }\r\n  }, [email]);\r\n\r\n  const validate = () => {\r\n    let errorData = {};\r\n    // email\r\n\r\n    errorData.email = [];\r\n    if (!email) {\r\n      errorData.email.push(\"email cant be blank\");\r\n    }\r\n    const validEmailRegex = /\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*/;\r\n    if (email) {\r\n      if (!validEmailRegex.test(email)) {\r\n        errorData.email.push(\"Proper email address is expected\");\r\n      }\r\n    }\r\n    //password\r\n    errorData.password = [];\r\n    //password cant be blank\r\n\r\n    if (!password) {\r\n      errorData.password.push(\"password cant be blank\");\r\n    }\r\n    //password regex\r\n\r\n    const validpasswordRegex = /((?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,15})/;\r\n    if (password) {\r\n      if (!validpasswordRegex.test(password)) {\r\n        errorData.password.push(\"Proper password is expected\");\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(validate,[email,password]);\r\n\r\n  let onLoginClick = async () => { \r\n    //set all controls as dirty \r\n    let dirtyData = dirty; \r\n    Object.keys(dirty).forEach((control) => { \r\n      dirtyData[control] = true; \r\n    }); \r\n    setdirty(dirtyData); \r\n \r\n    //call validate \r\n    validate(); \r\n \r\n    if (isValid()) { \r\n      let response = await fetch( \r\n        `http://localhost:5000/users?email=${email}&password=${password}`, \r\n        { method: \"GET\" } \r\n      ); \r\n      if (response.ok) { \r\n        //Status code is 200 \r\n        let responseBody = await response.json(); \r\n        if (responseBody.length > 0) { \r\n          // props.history.replace(\"/dashboard\");\r\nur.setuser({\r\n  ...ur.user,\r\n  isLoggedIn:true,\r\n  currentUserName: responseBody[0].fullname\r\n})\r\n\r\n          nav('/dashboard') \r\n        } else { \r\n          setloginMsg( \r\n            <span className=\"text-danger\">Invalid Login, please try again</span> \r\n          ); \r\n        } \r\n      } else { \r\n        setloginMsg( \r\n          <span className=\"text-danger\">Unable to connect to server</span> \r\n        ); \r\n      } \r\n    } \r\n  }; \r\n \r\n  let isValid = () => { \r\n    let valid = true; \r\n \r\n    //reading all controls from errors \r\n    for (let control in errors) { \r\n      if (errors[control].length > 0) valid = false; \r\n    } \r\n \r\n    return valid; \r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-lg-5 col-md-7 mx-auto\">\r\n        <div className=\"card border-success shadow-lg my-2\">\r\n          <div className=\"card-header border-bottom border-success\">\r\n            <h3 className=\"text-success text-center\">Login Form</h3>\r\n          </div>\r\n          <div className=\"card-body border-bottom border-success\">\r\n            {/* email start */}\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">E-MAIL</label>\r\n              <input\r\n                type=\"text\"\r\n                value={email}\r\n                onChange={(e) => {\r\n                  setEmail(e.target.value);\r\n                }}\r\n                id=\"email\"\r\n                placeholder=\"E-mail\"\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n\r\n            {/* email end */}\r\n            {/* password start */}\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input\r\n                type=\"text\"\r\n                value={password}\r\n                id=\"password\"\r\n                onChange={(e) => {\r\n                  setpassword(e.target.value);\r\n                }}\r\n                placeholder=\"Password\"\r\n                className=\"form-control\"\r\n              />\r\n            </div>\r\n            {/* email end */}\r\n\r\n            <div className=\"card-footer text-center\">\r\n              <div className=\"m-1\">\r\n                {loginMsg}\r\n              </div>\r\n               <button className=\"btn btn-primary\" onClick={onLoginClick}>Login</button>   \r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}